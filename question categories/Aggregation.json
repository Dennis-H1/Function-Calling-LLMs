{
  "question_sets": [
    {
      "id": "MUSIC_Q_SINGLE_STEP_ONE_SHOT_V01_AGGREGATION",
      "name": "Mannheim Function Calling Benchmark: Questions w/ Single Parameters, One Step and One Shot",
      "domain": "Music",
      "date": "2024-01-15",
      "description": "Simple, single step questions designed to test aggregation capability.",
      "authors": ["Dennis Heinz", "Saman Khursheed", "Zeynep Eroglu"],
      "license": "Apache 2.0",
      "function_sets": ["MUSIC_FUNC_ONE_PARAM_SIMPLE_DESC_NO_EX_V01", "MUSIC_FUNC_ONE_PARAM_COMPLEX_DESC_NO_EX_V01"],
      "questions": [
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q1",
          "category": "Aggregation",
          "question": "How many songs were released in 2000? Return the answer in JSON format: {'number_of_songs':number_here}",
          "motivation": "Evaluate the ability to perform aggregation (counting) on the results.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["songs_by_release_date"],
                "parameters": [{ "release_date": "2000" }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "number_of_songs": 4
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q2",
          "category": "Aggregation",
          "question": "How many reviews have the albums of Radiohead received in total? Return the answer in JSON format: {'total_number_of_reviews':total_number_of_reviews_here}",
          "motivation": "Evaluate the ability to perform aggregation (sum) on the specific attribute of results.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["albums_by_artist_1"],
                "parameters": [{ "artist_name": "Radiohead" }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "total_number_of_reviews": 6161
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q3",
          "category": "Aggregation",
          "question": "Among the top 20 rated albums, which one has the lowest number of reviews? Return the answer in JSON format: {'album':'album_name_here'}",
          "motivation": "Evaluate the ability to find minimum value of specific attribute in the result.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["top_rated_albums"],
                "parameters": [{ "n": 20 }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "album": "In a Silent Way"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q4",
          "category": "Aggregation",
          "question": "Among all the songs of Ed Sheeran, which one is the most streamed? Return the answer in JSON format: {'song':'song_name_here'}",
          "motivation": "Evaluate the ability to find maximum value of specific attribute in the result.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["songs_by_artist_1"],
                "parameters": [{ "artist_name": "Ed Sheeran" }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "song": "Shape of You"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q5",
          "category": "Aggregation",
          "question": "What is the average rating of all the albums of Red Hot Chili Peppers? Return the answer in JSON format: {'average_rating_of_albums':average_rating_here}",
          "motivation": "Evaluate the ability to perform aggregation (average) on the result.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["albums_by_artist_1"],
                "parameters": [{ "artist_name": "Red Hot Chili Peppers" }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "average_rating_of_albums": 3.157
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q6",
          "category": "Aggregation",
          "question": "Can you provide me the average value of beats per minute for the songs of Olivia Rodrigo. Return the answer in JSON format: {'average_bpm_of_songs': value_of_average_bpm_here}",
          "motivation": "Evaluate the ability to perform aggregation (average) on the result.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["songs_by_artist_1"],
                "parameters": [{ "artist_name": "Olivia Rodrigo" }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "average_bpm_of_songs": 162.14
              }
            },
            "comment": null
          }
        }
      ]
    },
    {
      "id": "MUSIC_Q_SINGLE_STEP_ONE_SHOT_MULTI_PARAM_V01_AGGREGATION",
      "name": "Mannheim Function Calling Benchmark: Questions w/ Multiple Parameters, Single Step and One Shot",
      "domain": "Music",
      "date": "2024-01-15",
      "description": "Simple single step questions designed to test aggregation capability with multi parameter functions",
      "authors": ["Dennis Heinz", "Saman Khursheed", "Zeynep Eroglu"],
      "license": "Apache 2.0",
      "function_sets": ["MUSIC_FUNC_MULTI_PARAM_SIMPLE_DESC_NO_EX_V01"],
      "questions": [
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q1",
          "category": "Aggregation",
          "question": "Identify the album with the highest number of reviews among those with an average rating greater than 4 and receiving more than 55,000 ratings. Please provide only album(s) name. Return the answer in JSON format: {'album':'highest_reviewed_album_here'}",
          "motivation": "Evaluate the ability to find maximum value of specific attribute in the result.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["high_rated_albums"],
                "parameters": [{ "rating_threshold": 4, "min_ratings": 55000 }]
              },
              {
                "path_id": 2,
                "functions": ["high_rated_reviewed_albums"],
                "parameters": [{ "rating_threshold": 4, "min_ratings": 55000, "review_threshold": 1 }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "album": "The Dark Side of the Moon"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q2",
          "category": "Aggregation",
          "question": "Which is the least popular song among the songs with minimum danceability of 87%? Please provide only song(s) name. Return the answer in JSON format: {'song':'least_popular_song_here'}",
          "motivation": "Evaluate the ability to find minimum value of specific attribute in the result.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["songs_by_danceability_explicitness"],
                "parameters": [
                  { "danceability_threshold": 87, "explicit": true }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "song": "LA GRINGA"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q3",
          "category": "Aggregation",
          "question": "Can you provide me the average value of energy for the top 5 songs of SZA. Return the answer in JSON format: {'energy_%':[5_song_energy_percentages_here], 'average_energy_value': calculated_number}",
          "motivation": "Evaluate the ability to perform aggregation (average) on the result.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["top_streamed_songs_by_artist"],
                "parameters": [{ "artist_name": "SZA", "n": 5 }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "energy_%": [65,69,20,78,66],
                "average_energy_value": 59.6
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q4",
          "category": "Aggregation",
          "question": "Can you calculate the total number of reviews received by albums released from the beginning of March to the end of April in 2010? Return the answer in JSON format: {'review_counts':[album_review_counts_here], 'total_reviews': calculated_reviews}",
          "motivation": "Evaluate the ability to perform aggregation (sum) on the specific attribute of results.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["filter_albums_by_date_range"],
                "parameters": [
                  { "start_date": "2010-03-01", "end_date": "2010-04-30" }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "review_counts": [198,203,83,93,78,79,111,84,52,41,48,68,40,51,14,69,52,50,28],
                "total_reviews": 1442
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q5",
          "category": "Aggregation",
          "question": "How many of 85% danceable songs containing obscene words have more than 1 artist? Return the answer in JSON format: {'track_names':[track_names_here], 'songs_count': count_here}",
          "motivation": "Evaluate the ability to perform aggregation (counting) on the results.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["songs_by_danceability_explicitness"],
                "parameters": [
                  { "danceability_threshold": 85, "explicit": true }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "track_names": ["3D (feat. Jack Harlow)","Colostomy (feat. WizDaWizard)","Tempo","LA GRINGA"],
                "songs_count": 4
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q6",
          "category": "Aggregation",
          "question": "Which of Eminem's top songs from 2002 has the lowest speechiness value? Please provide only song(s) name. Return the answer in JSON format: {'song':'lowest_lively_song_name'}",
          "motivation": "Evaluate the ability to find minimum value of specific attribute in the result.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["top_streamed_songs_by_artist_date"],
                "parameters": [
                  { "artist_name": "Eminem", "release_date": "2002" }
                ]
              },
              {
                "path_id": 2,
                "functions": ["top_streamed_songs_by_artist_date_range"],
                "parameters": [
                  {
                    "artist_name": "Eminem",
                    "start_date": "2002-01-01",
                    "end_date": "2002-12-31"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "song": "Without Me"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q7",
          "category": "Aggregation",
          "question": "Among the top 6 songs of Taylor Swift performed in 2023, which one has the highest value of bpm? Please provide only song(s) name. Return the answer in JSON format: {'song':'song_name'}",
          "motivation": "Evaluate the ability to find maximum value of specific attribute in the result.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["top_streamed_songs_by_artist_date"],
                "parameters": [
                  {
                    "artist_name": "Taylor Swift",
                    "release_date": "2023",
                    "n": 6
                  }
                ]
              },
              {
                "path_id": 2,
                "functions": ["top_streamed_songs_by_artist_date_range"],
                "parameters": [
                  {
                    "artist_name": "Taylor Swift",
                    "start_date": "2023-01-01",
                    "end_date": "2023-12-31",
                    "n": 6
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "song": "Better Than Revenge (Taylor's Version)"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q8",
          "category": "Aggregation",
          "question": "Among all the explicit songs with a danceability of 80 or more and speechiness above 39, which song has the longest duration? Please provide only song(s) name. Return the answer in JSON format: {'song':'song_name'}",
          "motivation": "Evaluate the ability to find maximum value of specific attribute in the result.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["songs_by_danceability_explicitness_speechiness"],
                "parameters": [
                  {
                    "danceability_threshold": 80,
                    "speechiness_threshold": 39,
                    "explicit": true
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "song": "Colostomy (feat. WizDaWizard)"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q9",
          "category": "Aggregation",
          "question": "Can you identify the Pop Rock album, categorized as melodic, released in 2023 that has the lowest average rating? Please provide only album(s) name. Return the answer in JSON format: {'album':'album_name_here'}",
          "motivation": "Evaluate the ability to find minumum value of specific attribute in the result.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["albums_by_year_genres_and_descriptors"],
                "parameters": [
                  {
                    "release_date": "2023",
                    "genres": ["Pop Rock"],
                    "descriptors": ["melodic"]
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "album": "Rush!"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q10",
          "category": "Aggregation",
          "question": "How many reviewers, in total, contributed reviews for albums released in 1988 with a rating greater than 3.5, where each album was reviewed by more than 200 people and received ratings from a minimum of 15,000 individuals? Return the answer in JSON format: {'review_counts':[album_review_counts_here], 'total_reviews': calculated_reviews}",
          "motivation": "Evaluate the ability to perform aggregation (sum) on the specific attribute of results.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["high_rated_reviewed_albums_by_date"],
                "parameters": [
                  {
                    "rating_threshold": 3.5,
                    "min_ratings": 15000,
                    "review_threshold": 200,
                    "release_date": "1988"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "review_counts": [501,368,577,232,228],
                "total_reviews": 1906
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_AGG_Q11",
          "category": "Aggregation",
          "question": "How many albums, released in the last quarter of 2023, have more than 5 reviews? Return the answer in JSON format: {'albums': [album_names_here], 'review_counts': [review_counts_here], 'album_count': morethan_5_reviewed_albums_count}",
          "motivation": "Evaluate the ability to perform aggregation (counting) on the result.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["filter_albums_by_date_range"],
                "parameters": [
                  {
                    "start_date": "2023-10-01",
                    "end_date": "2023-12-31"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "albums": ["Heaven Knows","I<3UQTINVU","Blanket"],
                "review_counts": [23,6,13],
                "album_count": 3
              }
            },
            "comment": null
          }
        }
      ]
    },
    {
      "id": "MUSIC_Q_MULTI_CALL_SEQUENTIAL_V01_AGGREGATION",
      "name": "Mannheim Function Calling Benchmark: Questions w/ Multi Step and One Shot for Sequential Function Calling",
      "domain": "Music",
      "date": "2024-01-15",
      "description": "Simple, multi step questions designed to test the aggregation capability using sequential function calling",
      "authors": ["Dennis Heinz", "Saman Khursheed", "Zeynep Eroglu"],
      "license": "Apache 2.0",
      "function_sets": ["MUSIC_FUNC_COMPLEX_DESC_NO_EX_V2"],
      "questions": [
        {
          "id": "MUSIC_SEQ_MULTI_STEP_ONE_SHOT_AGG_Q1",
          "category": "Aggregation",
          "question": "I have heard a lot about this song ‘Cruel Summer’ by some artist. Can you find its artist and return me the average of the number of ratings received by his/her albums. Return the answer in JSON format: {'name_of_artist':'artist_name', 'average_number_of_ratings': Average_number_of rating_here}",
          "motivation": "Evaluate the ability to perform aggregation (average) on the result.",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "song_info",
                  "albums_by_artist_2"
                ],
                "parameters": [
                  {
                    "song_name": "Cruel Summer"
                  },
                  {
                    "artist_name": "Taylor Swift"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "name_of_artist": "Taylor Swift",
                "average_number_of_ratings": 5095.71
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SEQ_MULTI_STEP_ONE_SHOT_AGG_Q2",
          "category": "Aggregation",
          "question": "Of all the albums of Olivia Rodrigo, please get the songs of her album released in 2021 and return the one with the highest bpm value. Return the answer in JSON format: {'song':'song_name'}",
          "motivation": "Evaluate the ability to find maximum value of specific attribute in the result.",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "albums_by_artist_2",
                  "songs_by_album"
                ],
                "parameters": [
                  {
                    "artist_name": "Olivia Rodrigo"
                  },
                  {
                    "album_name": "Sour"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "song": "deja vu"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SEQ_MULTI_STEP_ONE_SHOT_AGG_Q3",
          "category": "Aggregation",
          "question": "Please return the album with the lowest rating released in the same year in which Mistletoe was released. Return the answer in JSON format: {'album':'name_of_album_with_lowest_rating'}",
          "motivation": "Evaluate the ability to find minimum value of specific attribute in the result.",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "song_info",
                  "albums_by_release_date_2"
                ],
                "parameters": [
                  {
                    "song_name": "Mistletoe"
                  },
                  {
                    "release_date": "2011"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "album": "Under the Mistletoe"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SEQ_MULTI_STEP_ONE_SHOT_AGG_Q4",
          "category": "Aggregation",
          "question": "How many songs are released by the co-artist of Taylor Swift in the song “The Joker And The Queen (feat. Taylor Swift)”? Return the answer in JSON format: {'number_of_songs':number_of_songs_here}",
          "motivation": "Evaluate the ability to perform aggregation (counting) on the results.",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "song_info",
                  "songs_by_artist_2"
                ],
                "parameters": [
                  {
                    "song_name": "The Joker And The Queen (feat. Taylor Swift)"
                  },
                  {
                    "artist_name": "Ed Sheeran"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "number_of_songs": 13
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SEQ_MULTI_STEP_ONE_SHOT_AGG_Q5",
          "category": "Aggregation",
          "question": "Can you please return the sum of the number of reviews received by the albums of the famous band whose song is Creep? Return the answer in JSON format: {'total_reviews': total_number_of_reviews}",
          "motivation": "Evaluate the ability to perform aggregation (sum) on the specific attribute of results.",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "song_info",
                  "albums_by_artist_2"
                ],
                "parameters": [
                  {
                    "song_name": "Creep"
                  },
                  {
                    "artist_name": "Radiohead"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "total_reviews": 4338
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SEQ_MULTI_STEP_ONE_SHOT_AGG_Q6",
          "category": "Aggregation",
          "question": "Of the two singers of song Merry Christmas, who is the older one? Return the answer in JSON format: {'artist': 'name_of_older_artist_here'}",
          "motivation": "Evaluate the ability to identify lowest value w.r.t date. ",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "song_info",
                  "artist_info",
                  "artist_info"
                ],
                "parameters": [
                  {
                    "song_name": "Merry Christmas"
                  },
                  {
                    "artist_name": "Ed Sheeran"
                  },
                  {
                    "artist_name": "Elton John"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "artist": "Elton John"
              }
            },
            "comment": null
          }
        }
      ]
    },
    {
      "id": "MUSIC_Q_MULTI_CALL_PARALLEL_V01_AGGREGATION",
      "name": "Mannheim Function Calling Benchmark: Questions w/ Multi Step and One Shot for Parallel Function Calling.",
      "domain": "Music",
      "date": "2024-01-15",
      "description": "Simple, multi step questions designed to test the aggregation capability using parallel function calling",
      "authors": ["Dennis Heinz", "Saman Khursheed", "Zeynep Eroglu"],
      "license": "Apache 2.0",
      "function_sets": ["MUSIC_FUNC_COMPLEX_DESC_NO_EX_V2"],
      "questions": [
        {
          "id": "MUSIC_PAR_MULTI_STEP_ONE_SHOT_AGG_Q1",
          "category": "Aggregation",
          "question": "Using the info of Miley Cyrus, Dua Lipa and Rihanna, return the name of the artist who is the youngest. Return the answer in JSON format: {'youngest_artist': 'name_of_artist'}",
          "motivation": "Evaluate the ability to find the most recent date attribute value.",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "artist_info",
                  "artist_info",
                  "artist_info"
                ],
                "parameters": [
                  {
                    "artist_name": "Miley Cyrus"
                  },
                  {
                    "artist_name": "Dua Lipa"
                  },
                  {
                    "artist_name": "Rihanna"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "youngest_artist": "Dua Lipa"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_PAR_MULTI_STEP_ONE_SHOT_AGG_Q2",
          "category": "Aggregation",
          "question": "Provide the average no of streams for the songs of each of these artists: Bruno Mars, Olivia Rodrigo and Coldplay in that order. Which artist's songs has the highest avg streams? Return the answer in JSON format: {'artist_with_highest_number_streams': 'name', 'avg_num_streams': [ordered_n]}",
          "motivation": "Evaluate the ability to perform aggregation (average) on the result and find maximum value among the aggregated result.",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "songs_by_artist_2",
                  "songs_by_artist_2",
                  "songs_by_artist_2"
                ],
                "parameters": [
                  {
                    "artist_name": "Bruno Mars"
                  },
                  {
                    "artist_name": "Olivia Rodrigo"
                  },
                  {
                    "artist_name": "Coldplay"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [
                "avg_num_streams"
              ],
              "answer": {
                "artist_with_highest_number_streams": "Bruno Mars",
                "avg_num_streams": [
                  1461730149.75,
                  1063164130.86,
                  1275058686
                ]
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_PAR_MULTI_STEP_ONE_SHOT_AGG_Q3",
          "category": "Aggregation",
          "question": "Among the albums of The Beatles and Radiohead, which album received the lowest number of reviews? Return the answer in JSON format: {'album': 'lowest_reviewed_album_name'}",
          "motivation": "Evaluate the ability to find minimum value of specific attribute in the result.",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "albums_by_artist_2",
                  "albums_by_artist_2"
                ],
                "parameters": [
                  {
                    "artist_name": "The Beatles"
                  },
                  {
                    "artist_name": "Radiohead"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "album": "Love"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_PAR_MULTI_STEP_ONE_SHOT_AGG_Q4",
          "category": "Aggregation",
          "question": "Is the no of albums released by Kendrick Lamar and the number of tracks in his album “Mr. Morale & The Big Steppers” same? If not, what’s the difference? Return the answer in JSON format: {'album_count': KendrickLamar_album_count, 'song_count': song_counts_in_Mr.Morale&TheBigSteppers, 'difference': subtracted_value}",
          "motivation": "Evaluate the ability to perform aggregation (counting) on the results and also calculating difference between two values.",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "albums_by_artist_2",
                  "songs_by_album"
                ],
                "parameters": [
                  {
                    "artist_name": "Kendrick Lamar"
                  },
                  {
                    "album_name": "Mr. Morale & The Big Steppers"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "album_count": 2,
                "song_count": 11,
                "difference": 9
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_PAR_MULTI_STEP_ONE_SHOT_AGG_Q5",
          "category": "Aggregation",
          "question": "How many ratings have been received by the albums of Michael Jackson and Madonna? Return the answer in JSON format: {'total_ratings_by_MichealJackson': MJ_total_value, 'total_ratings_by_Madonna': Madonna_total_value}",
          "motivation": "Evaluate the ability to perform aggregation (sum) on the specific attribute of results.",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "albums_by_artist_2",
                  "albums_by_artist_2"
                ],
                "parameters": [
                  {
                    "artist_name": "Michael Jackson"
                  },
                  {
                    "artist_name": "Madonna"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "total_ratings_by_MichealJackson": 49723,
                "total_ratings_by_Madonna": 37932
              }
            },
            "comment": null
          }
        }
      ]
    },
    {
      "id": "TRAVEL_Q_SINGLE_STEP_ONE_SHOT_V01_AGGREGATION",
      "name": "Mannheim Function Calling Benchmark: Questions w/ Single Parameters, One Step and One Shot",
      "domain": "Travel",
      "date": "2024-01-15",
      "description": "Simple, single step questions designed to test a subset of selection of aggregation.",
      "authors": ["Deidamea Bajri", "Serxhina Kutrolli","Stiliana Jano"],
      "license": "Apache License 2.0",
      "function_sets": ["TRAVEL_FUNC_ONE_PARAM_SIMPLE_DESC_NO_EX_V01"],
      "questions": [
        {
          "id": "TRAVEL_SINGLE_STEP_ONE_SHOT_AGG_Q1",
          "category": "Aggregation",
          "question": " Hello! I am traveling for work in New York and I have limited refundable budget and I would not like to spend more than 60 dollars per night. Can you find me ten options? Return the answer in JSON format: {'airbnb':[my_airbnb]}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_listing_by_lower_price"],
                "parameters": [{ "price": 60 }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "Amazing huge furnished room!",
                  "Huge room in great area 25 minutes from Manhattan",
                  "Brooklyn Home in the Heart of it All",
                  "Room in Bushwick Bk available June",
                  "Sunny spacious room full of good energy",
                  "Nice & new room  washerdryer 5 min to train!",
                  "Be Comfy Loft Bedroom",
                  "Private Room for short stay in a house.",
                  "NEW Bedroom wPrivate Toilet (Great Study Space)",
                  "Large Room Close to NYC"
                ]
              }
            }
          }
        },

        {
          "id": "TRAVEL_SINGLE_STEP_ONE_SHOT_AGG_Q2",
          "category": "Aggregation",
          "question": " Hello, I am currently in New York but I don't have much money and I would like to stay at a place for tonight. My limit is 30 dollars. Do you have around ten suggestions? Return the answer in JSON format: {'airbnb':[my_airbnb]}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_listing_by_lower_price"],
                "parameters": [{ "price": 30 }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "Room in Bushwick Bk available June",
                  "Calm bed great area.",
                  "Beautiful NYC Apartment in Popular Brooklyn spot!!",
                  "Sunnyside RM w a view. Near everything you need.",
                  "Room with a view",
                  "Room in spacious house in Brooklyn!",
                  "Bronx Apartment College Ave",
                  "Beautiful room in renovated Manhattan apartment",
                  "Warm little oasis in Brooklyn with Full size bed",
                  "Comfortable cozy dorm-like room"
                ]
              }
            }
          }
        },
        {
          "id": "TRAVEL_SINGLE_STEP_ONE_SHOT_AGG_Q3",
          "category": "Aggregation",
          "question": " Hello, I have 23 dollars in cash and my card is not working, I am looking for a place to stay tonight in New York, can you please help me? Return the answer in JSON format: {'airbnb':[my_airbnb]}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_listing_by_lower_price"],
                "parameters": [{ "price": 23 }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": ["Calm bed great area.", "Room with a view"]
              }
            }
          }
        },
        {
          "id": "TRAVEL_SINGLE_STEP_ONE_SHOT_AGG_Q4",
          "category": "Aggregation",
          "question": " I intend to allocate 500 dollars for my upcoming trip to New York, with a portion reserved specifically for accommodation, estimated at approximately 100 dollars. Can you provide me with ten suggestions for lodging within this budget? Return the answer in JSON format: {'airbnb':'my_airbnb'}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_listing_by_lower_price"],
                "parameters": [{ "price": 100 }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "Amazing huge furnished room!",
                  "Sunny and spacious  1-bedroom in Brooklyn",
                  "Large Private Room in Greenpoint Williamsburg",
                  "Quiet & Spacious Brooklyn Apt for Cat-Lovers",
                  "Huge room in great area 25 minutes from Manhattan",
                  "Brooklyn Home in the Heart of it All",
                  "Large Parlor Room Landmark Home 1 block to PRATT",
                  "Room in Bushwick Bk available June",
                  "British Room @ Columbia Uni.",
                  "Spacious brand new apartment 2 bedrooms - 2bath"
                ]
              }
            }
          }
        },
        {
          "id": "TRAVEL_SINGLE_STEP_ONE_SHOT_AGG_Q5",
          "category": "Aggregation",
          "question": "I plan to budget 500 dollars for my upcoming New York trip, with 80 dollars designated for accommodation, 220 dollars for clothing, and 200 dollars for dining at various restaurants. Could you offer me ten diverse lodging recommendations that fit within this financial plan? Return the answer in JSON format: {'airbnb':['my_airbnb']} ",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average, filtering also any extra context given by the user",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_listing_by_lower_price"],
                "parameters": [{ "price": 80 }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "Amazing huge furnished room!",
                  "Sunny and spacious  1-bedroom in Brooklyn",
                  "Huge room in great area 25 minutes from Manhattan",
                  "Brooklyn Home in the Heart of it All",
                  "Room in Bushwick Bk available June",
                  "British Room @ Columbia Uni.",
                  "Spacious One-bedroom Home in Columbia U",
                  "Midtown Luxury Living room close to Highline",
                  "Bargain Warm Spacious Studio in Carroll Gardens!",
                  "Furnished Bedroom in Murray Hill"
                ]
              }
            }
          }
        },
        {
          "id": "TRAVEL_SINGLE_STEP_ONE_SHOT_AGG_Q6",
          "category": "Aggregation",
          "question": " Some special people are arriving to New York, and I would like to find the best 5 places for them to stay for some nights, could you help me with some recommendations? Please return at most 10 entries. Return the answer in JSON format: {'airbnb':'my_airbnb'}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_frequent_listings"],
                "parameters": [{ "nr_of_listings": 5 }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "Bright LARGE 2 BEDS! near Manhattan",
                  "1 Pvt. Room in Upper West Manhattan",
                  "Cozy Private Bedroom",
                  "Peaches Paradise.",
                  "Apartment 6"
                ]
              }
            }
          }
        },
        {
          "id": "TRAVEL_SINGLE_STEP_ONE_SHOT_AGG_Q7",
          "category": "Aggregation",
          "question": " Anticipating the imminent arrival of cherished guests in New York, I find myself in a quest for the three utmost in vogue apartments, prioritizing an exceptional stay, all while remaining indifferent to any financial considerations.Return the answer in JSON format: {'airbnb':['my_airbnb']} ",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_frequent_listings"],
                "parameters": [{ "nr_of_listings": 3 }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "Bright LARGE 2 BEDS! near Manhattan",
                  "1 Pvt. Room in Upper West Manhattan",
                  "Cozy Private Bedroom"
                ]
              }
            }
          }
        },
        {
          "id": "TRAVEL_SINGLE_STEP_ONE_SHOT_AGG_Q8",
          "category": "Aggregation",
          "question": "Do you think that you can find me around ten accommodations in New York just enough for the 30 dollars in my pocket? Return the answer in JSON format: {'airbnb':['my_airbnb']}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_listing_by_lower_price"],
                "parameters": [{ "price": 30 }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "Room in Bushwick Bk available June",
                  "Calm bed great area.",
                  "Beautiful NYC Apartment in Popular Brooklyn spot!!",
                  "Sunnyside RM w a view. Near everything you need.",
                  "Room with a view",
                  "Room in spacious house in Brooklyn!",
                  "Bronx Apartment College Ave",
                  "Beautiful room in renovated Manhattan apartment",
                  "Warm little oasis in Brooklyn with Full size bed",
                  "Comfortable cozy dorm-like room"
                ]
              }
            }
          }
        }     
      ]
    },
    {
      "id": "TRAVEL_Q_SINGLE_STEP_ONE_SHOT_MULTI_PARAM_V01_AGGREGATION",
      "name": "Mannheim Function Calling Benchmark: Questions w/ Multiple Parameters, Single Step and One Shot",
      "domain": "Travel",
      "date": "2024-01-15",
      "description": "Single step questions designed to test a subset of selection of aggregation questions",
      "authors": ["Deidamea Bajri", "Serxhina Kutrolli","Stiliana Jano"],
      "license": "Apache License 2.0",
      "function_sets": ["TRAVEL_FUNC_MULTI_PARAM_SIMPLE_DESC_NO_EX_V01"],
      "questions": [

        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_AGG_Q1",
          "category": "Aggregation",
          "question": "Hello, I want to find a good place to stay in Brooklyn with some friends but I do not know where. I have discussed how much would that cost as and we have decided 80-90 dollars per night. Could you find us some good places to stay? Return the answer in JSON format: {'airbnb':['my_airbnb']}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_airbnb_by_price_range_neighbourhood"],
                "parameters": [
                  {
                    "min_price": 80,
                    "max_price": 90,
                    "neighbourhood_group": "Brooklyn"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "Sunny and spacious  1-bedroom in Brooklyn",
                  "Quiet & Spacious Brooklyn Apt for Cat-Lovers",
                  "BEST location in Williamsburg",
                  "Quiet room in Greenpoint Brooklyn",
                  "Nice Room",
                  "Modern living in semi-industrial setting",
                  "Red Hook studio space with private entrance",
                  "Spacious yellow room in Brooklyn",
                  "Charming Cozy & spacious  bedroom in Brooklyn",
                  "Renovated: 15min 4 Train ride to NYC-Crown Heights",
                  "Cozy Studio on McGolrick Park",
                  "Sun-drenched airy industrial loft in Brooklyn!",
                  "Stuyvesant Heights Townhouse",
                  "Cozy Sunny Spacious 1 Bedroom Gem in Greenpoint!",
                  "Rm @Top Floor of a Luxury Building!",
                  "Private room in prime Greenpoint-Steps to G train!",
                  "Room with its private bathroom and garden access",
                  "Large Fully Furnished Quiet 1 Bedroom Apt.",
                  "Spacious Apt w Balcony in Bushwick",
                  "New! Entire private luxury apt near 3 trains!",
                  "Sunny Artesian apartment",
                  "Lovely Brooklyn Apt",
                  "Charming Pr Room in E. Williamsburg",
                  "Cozy large and sunny bedroom in Greenpoint",
                  "Comfortable room in bushwick",
                  "Cozy Studio Apt-One block away from Prospect Park!",
                  "Luxury Room in Landmark House",
                  "Cute and Cozy Two Bedroom in Sunset Park",
                  "Cute brick wall Br in Williamsburg.",
                  "Private room in cozy apartment Fort Greene"
                ]
              }
            },
            "comment": "GPT calls the correct 3-dimensional function and correctly identifies the parameters. It sets the appropriate values to find Airbnb listings within a specified price range, considering both the minimum and maximum prices. Additionally, the neighborhood parameter is accurately defined."
          }
        },
        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_AGG_Q2",
          "category": "Aggregation",
          "question": "Hello, I really would like a good place to stay in Queens. Now I do not have many preferences but a price of 100 would be the upper bound for me. However, a floor could be 50 because I do not want to sleep in a very small and dirty room. Return the answer in JSON format: {'airbnb_by_neighbour':'neighbourhood_group', 'aribnb_by_price_range':'range_price_per_night' }",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_airbnb_by_price_range_neighbourhood"],
                "parameters": [
                  {
                    "min_price": 50,
                    "max_price": 100,
                    "neighbourhood_group": "Queens"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "Amazing huge furnished room!",
                  "Spacious brand new apartment 2 bedrooms - 2bath",
                  "Large Room Close to NYC",
                  "LIC Jackson park luxury apartment Queen Plaza",
                  "The beautiful room with your own bathroom",
                  "Jupiter Suites- Rm #2- (JFK)",
                  "Cozy Studio! Easy Access to Train to Manhattan!",
                  "纽约之家(SunnyHome3)",
                  "NYC Beach House with Yard.",
                  "Ready!",
                  "LARGE ROOM 15 TO MANHATTAN",
                  "10mins to Manhattan 59th St 17mins Times Square.",
                  "Birds singing and sunsets in NYC!",
                  "Spacious Railroad in LICAstoria",
                  "Cozy 15 mins Manhattan& 10 Mins LGA",
                  "Cozy &  Comfy Room in quiet Briarwood Queens NY",
                  "Comfy Bedroom quite neighborhood ",
                  "Master Bedroom in Your Cozy Queens Getaway",
                  "Prívate Cozy Room",
                  "Spacious Bedroom @ Convinience",
                  "Spacious standalone room in the heart of Astoria",
                  "Twice As Better Home Inn",
                  "Large suite with private bathroom (15 min to city)",
                  "5 Stops to 42nd StTimes Sqaure",
                  "Cozy private bedroom 15 min from Manhattan",
                  "5mn location from Manhattan midtown",
                  "Modern Apartment 7 min from JFK Airport and Casino",
                  "Boho tranquil room in bushwickridgewood",
                  "Cozy Two Room Studio Astoria",
                  "Gorgeous Studio Hideoutw Queen Bed.",
                  "Lovely Studio in Flushingkew Garde",
                  "JFK 10 & LGA 15 MINUTES AWAY AC PRIVATE BEDROOM B",
                  "Tu Tranquilidad no tiene precio",
                  "Cozy Walk up apartment in a great neighborhood!",
                  "ASTORIA in QUEENS",
                  "Spacious & Sunny Master w Private Bath",
                  "‘’AROUND THE CORNER’’  QUEENS NY",
                  "Beautiful and confortable room",
                  "Lucky home 温馨如家",
                  "Spacious Kid-Friendly and 15-20 Mins. to Midtown",
                  "Cute beach bungalow by the beach 80min Manhattan",
                  "King Bedroom w Private Bath: BUSHWICK L Train",
                  "Double Cozy Room only 20 min to NYC",
                  "TOWN HOME ONE",
                  "Great! Private Room in Sunnyside",
                  "Peaches Paradise.",
                  "Lovely  LIC-Lush garden-Midtown1stop-Breakfast",
                  "Maple Place",
                  "Full Bedroom Avaliable Astoria",
                  "CLEAN! Executive Studio Suite. Entire apt wpvt BR",
                  "Large private bedroom near Manhattan.",
                  "Large room in a cozy and very clean apt",
                  "Queens Astoria - Apartment & Room with NYC view.",
                  "Luxury apartment in the “heart of queens”",
                  "“For Heaven Cakes”",
                  "Private Room in NYC Apartment",
                  "Only 20 mins.  to manhattan via N & W  trains",
                  "Beautiful Clean & Quiet Room! Rm#3",
                  "Quiet and Spacious 1 Bed in Woodside",
                  "Chris' Cozy Cave!",
                  "Private Room in Spacious Sunnyside Apartment",
                  "Bright LARGE 2 BEDS! near Manhattan",
                  "Luxury Private Room \n15 mins From Manhattan",
                  "RM",
                  "Peaches Cozy Corner",
                  "3 Bedroom @ JFK CASINO BEACH LOCALE",
                  "Newly renovated apt near the cityideal room for 2"
                ]
              }
            },
            "comment": null
          }
        },
        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_AGG_Q3",
          "category": "Aggregation",
          "question": "Greetings, I'm in the process of planning a family trip to New York in December. We're working with a budget of $ 1500 for a 2 or 3-day stay. Within this budget, we've allocated over 500 dollars for clothing, approximately 600 dollars for dining at nice restaurants and enjoying coffee with friends. With the remaining budget ranging from 250 dollars to maybe 400 dollars, I'm seeking recommendations for a suitable Airbnb around Brooklyn. Return the answer in JSON format: {'airbnb_by_neighbour':'neighbourhood_group', 'airbnb_by_nights':'min_number', 'aribnb_by_price':'price_per_night', 'aribnb_by_price_range':'range_price_per_night'}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_airbnb_by_price_min_nights_and_neighbourhood_group"
                ],
                "parameters": [
                  {
                    "min_price": 250,
                    "max_price": 400,
                    "min_nights": 2,
                    "neighbourhood_group": "Brooklyn"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "Spacious Brooklyn Brownstone 3BR+",
                  "Magical 3-bed3-bath fabulous views",
                  "LARGE DUPLEX-3BR3BA Williamsburg Townhouse+GARDEN",
                  "Spacious & Stylish 3BR Condo Steps to the Subway!",
                  "Unique Fort Greene Getaway with Private Deck",
                  "Amazing Location in Williamsburg with 4 Bedrooms",
                  "Charming Windsor Terrace Home",
                  "Brand new 2-bed in luxury full-service building",
                  "Luxury 4BR Home Spacious & Central to Trains",
                  "1000 SQ FT Cobble Hill Übercharmer",
                  "Entire 3rd Fl in Brownstone steps to Prospect Park",
                  "Luxury Pad NYC - Williamsburg Loft",
                  "3BR 1.5 Bath in Bushwick (10 Mins to Manhattan!)",
                  "Williamsburg Two BedroomTwo Bath",
                  "100% 5★ Reviews - Big 2-Bed 2-Bath – Central Wburg",
                  "*NEW*6 BED BROOKLYN DUPLX15 MIN TRAIN RIDE 2 CITY",
                  "Spacious 2bd apt with Manhattan view and sunset",
                  "Gorgeous Dumbo 2-Bedroom w Incredible Views",
                  "Peaceful Spacious and Comfy 3BR Oasis!",
                  "Oasis in the heart of Williamsburg",
                  "AMAZING  3 BEDROOMS BROOKLYN",
                  "Perfect House for the Whole Family",
                  "Garden apt for 7 close to the city  & w free gym",
                  "Williamsburg 1 bedroom appartement",
                  "3 Story Town House in Park Slope",
                  "Midcentury Inspired Plantlovers Apt",
                  "Penthouse with huge deck and city views"
                ]
              }
            },
            "comment": null
          }
        },
        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_AGG_Q4",
          "category": "Aggregation",
          "question": "Now, I really like spaces that are shared and I would really love to find the best in Brooklyn for me to stay. I have previously visited like three places in Brooklyn but it is been a long time since I was there and I want to find some updated best places, let's not spare it, five would be nice. Please help me in my quest. Return the answer in JSON format:{'airbnb':'my_airbnb'}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_x_most_popular_places_in_neighbourhood_group_room_type"
                ],
                "parameters": [
                  {
                    "popularity": 5,
                    "room_type": "Shared room",
                    "neighbourhood_group": "Brooklyn"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "A Couch In East Williamsburg Near Train.",
                  "Williamsburg Loft!! Bedford L 1blk!",
                  "Bedroom 7 bed A.",
                  "2MinToTrainsCozyLivingRoomMaimonideLutheranHospital",
                  "Trendy Stylish Chic Loft in Greenpoint!"
                ]
              }
            },
            "comment": null
          }
        },
        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_AGG_Q5",
          "category": "Aggregation",
          "question": "I have previously been in 4 best private places places in Manhattan that you suggested me and I would really like to do that once more for Bronx, where I will be spending some nights next week. In a similar way please find me the best for Bronx. Return the answer in JSON format:{'airbnb':['my_airbnb']}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_x_most_popular_places_in_neighbourhood_group_room_type"
                ],
                "parameters": [
                  {
                    "popularity": 4,
                    "room_type": "Private room",
                    "neighbourhood_group": "Bronx"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "Cozy Private Bedroom",
                  "Private Studio in Private Home",
                  "Large Private Room. Safe area. Near 4 and D trains",
                  "Great room! Good for med students!"
                ]
              }
            },
            "comment": null
          }
        },
        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_AGG_Q6",
          "category": "Aggregation",
          "question": "I live in Brooklyn, and in mid-January, I'll be hosting some dear friends for a few days. I'm on the lookout for a truly unique, cozy, and inviting Airbnb in close proximity to my home for their stay. I'd greatly appreciate it if you could recommend the top three most distinctive and shared places in my neighborhood. Thank you. Return the answer in JSON format:{'airbnb':'my_airbnb'}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_x_most_popular_places_in_neighbourhood_group_room_type"
                ],
                "parameters": [
                  {
                    "popularity": 3,
                    "room_type": "Shared room",
                    "neighbourhood_group": "Brooklyn"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "A Couch In East Williamsburg Near Train.",
                  "Williamsburg Loft!! Bedford L 1blk!",
                  "Bedroom 7 bed A."
                ]
              }
            },
            "comment": null
          }
        },
        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_AGG_Q7",
          "category": "Aggregation",
          "question": "I want you to find me the airbnbs that have the minimum costs possible for the number of nights that I will be staying in Manhattan, I will be staying for at most 3 nights and since I do not have much money with me a shared room I think will be more reasonable than a private room to rent. If you could find me five places, that would be great. Return the answer in JSON format: {'airbnb':['my_airbnb]}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_min_cost_by_neighbourhood_group_room_type_min_nights"
                ],
                "parameters": [
                  {
                    "nr_requests": 5,
                    "room_type": "Shared room",
                    "min_nights": 3,
                    "neighbourhood_group": "Manhattan"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "Quite and comfortable shared room in UES",
                  "Quite and comfortable shared room in UES",
                  "Cozy NYC apartment shared space female only",
                  "Comfortable sofa bed in chic apt",
                  "Central Park - Comfy Futon Couch for 2"
                ]
              }
            },
            "comment": null
          }
        },
        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_AGG_Q8",
          "category": "Aggregation",
          "question": "Greetings, I will be attending a two-day work-related seminar in New York on my own. The conference is scheduled to take place in Manhattan, and I am in search of three economical, private accommodation options in close proximity to the seminar venue. Your assistance in identifying suitable choices would be greatly appreciated. Return the answer in JSON format: {'airbnb':['my_airbnb']}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_min_cost_by_neighbourhood_group_room_type_min_nights"
                ],
                "parameters": [
                  {
                    "nr_requests": 3,
                    "room_type": "Private room",
                    "min_nights": 2,
                    "neighbourhood_group": "Manhattan"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "Sparse room inside well-kept apartment",
                  "Sunny and isolated living room on Roosevelt island",
                  "Super-cute apartment in Harlem!"
                ]
              }
            },
            "comment": null
          }
        },
        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_AGG_Q9",
          "category": "Aggregation",
          "question": "I have never been to Bronx out of all the districts in New York but I have heard that it is quite cheap and has a reasonable range of prices however I do not know pretty much how much they cost for private rooms for example. Can you help me? Return the answer in JSON format: {'average:avg_price}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_avg_by_neighbourgood_group_and_room_type"],
                "parameters": [
                  {
                    "room_type": "Private room",
                    "neighbourhood_group": "Bronx"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "average": 56.82
              }
            },
            "comment": "The LLM should perform an average of all the prices."
          }
        },          
        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_AGG_Q10",
          "category": "Aggregation",
          "question": "I've been planning a summer trip to New York with my family, and my children are particularly keen on staying in an rich neighborhood such as Manhattan. However, a colleague who recently spent four days there cautioned against it due to potential high expenses. I am interested in obtaining a general estimate of the cost for a private accommodation suitable for a small family in that area. Your insights on this matter would be greatly appreciated.Return the answer in JSON format: {'average:avg_price}",
          "motivation": "Testing the ability of the LLM to filter by minimum or maximum, sum, count or average",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_avg_by_neighbourgood_group_and_room_type"],
                "parameters": [
                  {
                    "room_type": "Entire home apartment",
                    "neighbourhood_group": "Manhattan"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb_by_neighbour": "Manhattan",
                "type": "Entire home apartment",
                "average": 264.10
              }
            },
            "expected_answers": [
              "Returns the average price of a given kind of airbnb, located in Manhattan"
            ],
            "comment": "The LLM should understand that as that is a family that needs a private accommodation, needs a whole apartment instead of only a Private room."
          }
        }
      ]
    },
    {
      "id": "TRAVEL_Q_MULTI_CALL_SEQUENTIAL_V01_AGGREGATION",
      "name": "Mannheim Function Calling Benchmark: Questions w/ Multiple Calls and One Shot",
      "domain": "Travel",
      "date": "2024-01-15",
      "description": "Multi step questions designed to test a subset of aggregation questions.",
      "authors": ["Deidamea Bajri", "Serxhina Kutrolli","Stiliana Jano"],
      "license": "Apache License 2.0",
      "function_sets": ["TRAVEL_FUNC_MULTI_CALL_SEQUENTIAL_SIMPLE_DESC_NO_EX_V01"],
      "questions": [
        {
          "id": "TRAVEL_MULTI_CALL_SEQUENTIAL_AGG_Q1",
          "category": "Aggregation",
          "question": "In my observations here in New York, I've noticed people tend to rate restaurant experiences with stars ranging from 3 to 5. My hypothesis is that the cheapest restaurants might have the lowest ratings. Hence, I'd like you to locate a restaurant with the lowest star rating in the borough of Manhattan. Return the answer in JSON format: {'restaurants': [min_rating_restaurant]} ",
          "motivation": "Testing the ability of LLM to comprehend string based ranges to numerical operations with integers (minimum)",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_restaurants_by_ratings",
                  "get_neighborhood_by_rest_specification"
                ],
                "parameters": [
                  { "rating": 3 },
                  {
                    "restaurants": "Blue Ribbon Fried Chicken, Tamarind TriBeCa,Barbounia, Pylos, Bareburger, Shake Shack, Pepe Giallo, Sarabeth's",
                    "neighborhood": "Manhattan"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "restaurants": [
                  "Bareburger",
                  "Shake Shack",
                  "Pepe Giallo",
                  "Sarabeth's"
                ]
              }
            },
            "comment": "GPT should understand that the user requests the lowest-rated restaurants which correspond to a minimum rating of 3."
          }
        },
        {
          "id": "TRAVEL_MULTI_CALL_SEQUENTIAL_AGG_Q2",
          "category": "Aggregation",
          "question": " I am visiting for the first time New York, I'll be staying in a Cozy Entire Floor of Brownstone Airbnb near my university and I want to try diverse cuisines. Could you please provide a list of the two closest restaurants around here? Return the answer in JSON format: {'restaurants': [closest_restaurant]} ",
          "motivation": "Evaluate the ability of LLM to filter according to a minimum proximity distance defined by the user",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_long_lat_by_airbnb",
                  "get_restaurant_by_airbnb_closeness"
                ],
                "parameters": [
                  { "listing": "Cozy Entire Floor of Brownstone" },
                  { "latitude": 40.68514, "longitude": -73.95976 }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "restaurants": ["MARCO'S", "AUNTS ET UNCLES"]
              }
            },
            "comment": "GPT should understand that the user is requesting the two closest restaurants to the airbnb that the user is staying and perform a minimum on the distance outputted by the function."
          }
        },
        {
          "id": "TRAVEL_MULTI_CALL_SEQUENTIAL_AGG_Q3",
          "category": "Aggregation",
          "question": " I am in New York now and a friend suggested me to go in the PEPE GIALLO restaurant which is located in the 10 AVENUE street. The suggested restaurant was Italian. Can you please help me find the closest airbnb to this specific restaurant? Return the answer in JSON format: {'airbnb_close_to_rest': 'closest_airbnb']}",
          "motivation": "Evaluate GPT models on their capability to call a set of functions accurately and retrieve correct parameters, particularly while performing minimum.",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_long_lat_by_name_street",
                  "get_airbnb_by_lat_long"
                ],
                "parameters": [
                  { "restaurant": "PEPE GIALLO", "street": "10 AVENUE" },
                  { "latitude": 40.74676295, "longitude": -74.0048505 }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb_close_to_rest": "Chelsea Haven--Summer Sublet"
              }
            },
            "comment": "GPT should understand that the user is requesting the closest airbnb which corresponds to the minimum distance."
          }
        },
        {
          "id": "TRAVEL_MULTI_CALL_SEQUENTIAL_AGG_Q4",
          "category": "Aggregation",
          "question": " As I want to sleep in a place in Brooklyn, I would like to go to one of the 10 most frequently used by the customers, the one with more than 200 reviews, to stay in that zone so I can have the best time ever in the best place to stay. I would like to share my space with my sister and also I would like to find the best restaurant around there so we could eat our breakfast and lunch there. Return the answer in JSON format: {'restaurant_close_popular_airbnb': [best_restaurant]}",
          "motivation": "Evaluate LLM's ability to do operations on integers(maximum) and filtering based on comparisons based on user requests.",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_airbnb_with_max_reviews",
                  "get_long_lat_by_airbnb",
                  "get_restaurant_by_airbnb_closeness"
                ],
                "parameters": [
                  {
                    "popularity": 10,
                    "neigborhood_group": "Brooklyn",
                    "room_type": "Shared Room"
                  },
                  { "listing": "A Couch In East Williamsburg Near Train." },
                  { "latitude": 40.70472, "longitude": -73.93784 }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "restaurant_close_popular_airbnb": [
                  "MARCO'S",
                  "MAKAVELY PIZZA",
                  "YUMMY YUMMY CHINESE"
                ]
              }
            },
            "comment": "GPT should understand that from a total of 10 requested airbnbs it should filter only the ones that have more than 200 reviews to find the closest restaurants afterwards."
          }
        },
        {
          "id": "TRAVEL_MULTI_CALL_SEQUENTIAL_AGG_Q5",
          "category": "Aggregation",
          "question": " As I am staying for seven weekdays in New York, 6 days I will be staying at a relative's house and afterwards I would like to find a very nice Airbnb in Bronx to spend the rest of the days with my wife. Each of us have a budget of 15 bucks per night so we could stay together in a nice, clean Airbnb. Could you please provide me with some recommendations and their specific address if possible? Return the answer in JSON format: {'airbnb_address': 'my_airbnb_address'}",
          "motivation": "Evaluate the ability of LLM to perform numerical operations(summation and substraction) and chain-of-thought reasoning in order to find the geopgraphical proximities to the selection of targets.",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_airbnb_by_price_min_nights_and_neighborhood_group",
                  "get_long_lat_by_airbnb ",
                  "get_airbnb_address_by_lat_long"
                ],
                "parameters": [
                  {
                    "price": 30,
                    "min_nights": 1,
                    "neighbourhood_group": "Bronx"
                  },
                  { "listing": "Bronx Apartment College Av" },
                  { "latitude": 40.83739, "longitude": -73.91118 }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb_address": "TURNBULL AVENUE"
              }
            },
            "comment": "GPT should substract from a week the 5 days that the user will be staying at the relative's house (7-5 = 2) and summation (220+220) or multiplication (220*2) in this case since the user hass specified two people to stay at the airbnb."
          }
        },
        {
          "id": "TRAVEL_MULTI_CALL_SEQUENTIAL_AGG_Q6",
          "category": "Aggregation",
          "question": " I would like to find some good options really near to the place to stay to have dinner with some friends during the evenings, but firstly I would like to find an option to stay for 4 days in Staten Island. I will stay alone there for a seminar so I have a total budget given to 2000 dollars. Return the answer in JSON format: {'airbnb_address': 'my_airbnb_address'}",
          "motivation": "Evaluate the ability of LLM to perform numerical operations (division) and chain-of-thought reasoning in order to find the geopgraphical proximities to the selection of targets.",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_airbnb_by_price_min_nights_and_neighborhood_group",
                  "get_long_lat_by_airbnb ",
                  "get_airbnb_address_by_lat_long"
                ],
                "parameters": [
                  {
                    "price": 500,
                    "min_nights": 4,
                    "neighbourhood_group": "Staten Island"
                  },
                  { "listing": "5br Duplex. @ Ferry!  Water&City Views!" },
                  { "latitude": 40.64605, "longitude": -74.07897 }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb_address": "3 AVENUE"
              }
            },
            "comment": "GPT should understand that the total budget is set to 2000 dollars, thus the price per night corresponds to 500 dollars (2000/4 = 500)"
          }
        }                                                       
      ]
    },
    {
      "id": "TRAVEL_Q_MULTI_CALL_PARALLEL_V01_AGGREGATION",
      "name": "Mannheim Function Calling Benchmark: Questions w/ Multiple Calls and One Shot",
      "domain": "Travel",
      "date": "2024-01-15",
      "description": "Multi step questions designed to test a subset of aggregation questions.",
      "authors": ["Deidamea Bajri", "Serxhina Kutrolli","Stiliana Jano"],
      "license": "Apache License 2.0",
      "function_sets": ["TRAVEL_FUNC_MULTI_CALL_PARALLEL_SIMPLE_DESC_NO_EX_V01"],
      "questions": [

        {
          "id": "TRAVEL_MULTI_CALL_PARALLEL_AGG_Q1",
          "category": "Aggregation",
          "question": "Hello, I have two very good options which are Sushi Samba and Sushi of Gari which deliver sushi and I would like to order now for me and my sister. Could you please tell me which of the above restaurants delivers the fastest? Return the answer in JSON format: {'return_the_rest_with_smallest_deliv_time': 'my_restaurant'}",
          "motivation": "Evaluate the ability of the LLM to perform calculations and numerical comparisons (min) while calling simultaneousy several functions",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_avg_delivery_time_by_restaurant_name",
                  "get_avg_delivery_time_by_restaurant_name"
                ],
                "parameters": [
                  { "restaurant_name": "Sushi Samba" },
                  { "restaurant_name": "Sushi of Gari" }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "return_the_rest_with_smallest_deliv_time": "Sushi of Gari"
              }
            },
            "comment": "GPT should be able to perform a minimum on the average delivery times of the two requested restaurants after having at first called the two relevant functions."
          }
        },
        {
          "id": "TRAVEL_MULTI_CALL_PARALLEL_AGG_Q2",
          "category": "Aggregation",
          "question": "Hello, I have these three restaurant recommendations: Klong, TAO and Vezzo Thin Crust Pizza and I would like to know which one of them is the most expensive, according to their costs. Could you help me with this?  Return the answer in JSON format: {'the_restaurant_with_the_highest_cost': 'the_most_expensive_restaurant'}",
          "motivation": "Evaluate the ability of the LLM to perform calculations and numerical comparisons (max) while calling simultaneousy several functions",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_avg_costs_by_restaurant_name",
                  "get_avg_costs_by_restaurant_name",
                  "get_avg_costs_by_restaurant_name"
                ],
                "parameters": [
                  { "restaurant_name": "Klong" },
                  { "restaurant_name": "TAO" },
                  { "restaurant_name": "Vezzo Thin Crust Pizza" }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "the_restaurant_with_the_highest_cost": "Klong"
              }
            },
            "comment": "GPT should be able to perform a maximum on the average costs of the two requested restaurants after having at first called the two relevant functions."
          }
        },
        {
          "id": "TRAVEL_MULTI_CALL_PARALLEL_AGG_Q3",
          "category": "Aggregation",
          "question": "Hi, I would like to know which is the average preparation time of these two restaurants: Otto Enoteca Pizzeria and Vezzo Thin Crust Pizza? Return the answer in JSON format: {'the_average_preparation_time_among_2_rest': [avg_time_of_rest]} ",
          "motivation": "Evaluate the ability of the LLM to perform calculations and numerical comparisons (max) while calling simultaneousy several functions",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_avg_prep_time_by_restaurant_name",
                  "get_avg_prep_time_by_restaurant_name"
                ],
                "parameters": [
                  { "restaurant_name": "Otto Enoteca Pizzeria" },
                  { "restaurant_name": "Vezzo Thin Crust Pizza" }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "the_average_preparation_time_among_2_rest": [29.0, 27.0]
              }
            },
            "comment": "GPT should be able to perform an average of the two averages that are outputted by the two concurrent called functions."
          }
        },
        {
          "id": "TRAVEL_MULTI_CALL_PARALLEL_AGG_Q4",
          "category": "Aggregation",
          "question": "A colleague suggested to me today 3 Italian restaurants in New York for which I would like to find out the total average rating by the previous clients. The options are The Meatball shop, Osteria Morini and Otto Enoteca Pizzeria. Return the answer in JSON format: {'the_rating_of_meatball_osteria_Otto_Enoteca': [avg_rating_of_each_rest]} ",
          "motivation": "Evaluate the ability of the LLM to perform calculations and numerical comparisons while calling simultaneousy several functions",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_rating_by_restaurant_name",
                  "get_rating_by_restaurant_name",
                  "get_rating_by_restaurant_name"
                ],
                "parameters": [
                  { "restaurant_name": "The Meatball Shop" },
                  { "restaurant_name": "Osteria Morini" },
                  { "restaurant_name": "Otto Enoteca Pizzeria" }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "the_rating_of_meatball_osteria_Otto_Enoteca": [
                  4.53, 4.0, 4.86
                ]
              }
            },
            "comment": "GPT should understand the three function calls for the three requested restaurants by the user."
          }
        },
        {
          "id": "TRAVEL_MULTI_CALL_PARALLEL_AGG_Q5",
          "category": "Aggregation",
          "question": "When I was walking around I saw two nice coffee places called Cafe Mogador and Cafe Habana. I would like to choose the best one to have a nice time there with my friends. Could you please provide me the average rating of these coffee places? Return the answer in JSON format: {'the_average_rating_cafe': [both_avg_rating]} ",
          "motivation": "Evaluate the ability of the LLM to perform calculations (max) and numerical comparisons while calling simultaneousy several functions",
          "target": {
            "chained": true,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_rating_by_restaurant_name",
                  "get_rating_by_restaurant_name"
                ],
                "parameters": [
                  { "restaurant_name": "Cafe Mogador" },
                  { "restaurant_name": "Cafe Habana" }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "the_average_rating_cafe": [4.15, 4.27]
              }
            },
            "comment": "GPT should output the two averages for each of the cafes requested by the user."
          }
        }
      ]
    }      
  ],
  "function_sets": [
    {
      "id": "TRAVEL_FUNC_ONE_PARAM_SIMPLE_DESC_NO_EX_V01",
      "name": "Functions for Travel Use Case with simple function descriptions and no examples",
      "domain": "Travel",
      "categories": [
        "All Parameters",
        "Without Examples",
        "Simple Description"
      ],
      "num_functions": 14,
      "functions": [
        {
          "name": "get_host_name",
          "description": "Provide the host name for the AirbnB listing",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },
        {
          "name": "get_min_nights",
          "description": "Provide the number of nights required to stay for an airbnb",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },
        {
          "name": "get_nr_of_reviews",
          "description": "Provide the number of reviews for an airbnb",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },  
        {
          "name": "get_listing_price",
          "description": "Provide the price of an airbnb",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },
        {
          "name": "get_listing_by_neighbourhood_group",
          "description": "Get the airbnbs for a specific neighbourhood group",
          "parameters": {
              "type": "object",
              "properties": {
                  "neighbourhood_group": {
                      "type": "string",
                      "description": "The name of the neighbourhood group, e.g. Brooklyn"
                  }
              },
              "required": ["neighbourhood_group"]
          }
        },
        {
          "name": "get_listings_by_review_date",
          "description": "Get the listings for a specific review date in the format DD-MM-YY",
          "parameters": {
              "type": "object",
              "properties": {
                  "last_review_date": {
                      "type": "string",
                      "description": "The date of the last review, e.g. 12-05-19"
                  }
              },
              "required": ["last_review_date"]
          }
        },
        {
          "name": "get_listings_by_min_nights",
          "description": "Get the listings for a specific number of minimum nights to stay at an airbnb",
          "parameters": {
              "type": "object",
              "properties": {
                  "minimum_nights": {
                      "type": "string",
                      "description": "The number of minimum nights, e.g. 3"
                  }
              },
              "required": ["minimum_nights"]
          }
        },  
        {
          "name": "get_frequent_listings",
          "description": "Get the frequent airbnbs",
          "parameters": {
              "type": "object",
              "properties": {
                  "nr_of_listings": {
                      "type": "integer",
                      "description": "The number of listings, e.g. 3"
                  }
              },
              "required": ["nr_of_listings"]
          }
        },    
        {
          "name": "get_listing_by_price",
          "description": "Get the airbnbs for a specific price in US dollars currency",
          "parameters": {
              "type": "object",
              "properties": {
                  "price": {
                      "type": "integer",
                      "description": "The price of an airbnb per night, e.g. 90 dollars"
                  }
              },
              "required": ["price"]
          }
        },
        {
          "name": "get_listing_by_lower_price",
          "description": "Get the airbnbs for a price equal or less to the price requested in US dollars",
          "parameters": {
              "type": "object",
              "properties": {
                  "price": {
                      "type": "integer",
                      "description": "The price of an airbnb per night, e.g. 90 dollars"
                  }
              },
              "required": ["price"]
          }
        },
        {
          "name": "get_neighbourhood_group",
          "description": "Get the neighbourhood group of a specific airbnb",
          "parameters": {
              "type": "object",
              "properties": {
                  "name": {
                      "type": "string",
                      "description": "The name of the airbnb, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["name"]
          }
        },
        {
          "name": "get_restaurants_by_cuisine",
          "description": "For a specific cuisine category, get the respective restaurants",
          "parameters": {
              "type": "object",
              "properties": {
                  "cuisine": {
                      "type": "string",
                      "description": "The cuisine type, e.g. Japanese"
                  }
              },
              "required": ["cuisine"]
          }
        },
        {
          "name": "get_borough_location",
          "description": "For a specific restaurant, get the borough location",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant": {
                      "type": "string",
                      "description": "The restaurant name, e.g. Junoon"
                  }
              },
              "required": ["restaurant"]
          }
        },
        {
          "name": "get_cuisine",
          "description": "For a specific restaurant, get the cuisine",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant": {
                      "type": "string",
                      "description": "The restaurant name, e.g. Junoon"
                  }
              },
              "required": ["restaurant"]
          }
        },
        {
          "name": "get_listing_by_room_type",
          "description": "Get the airbnbs for a specific room type",
          "parameters": {
              "type": "object",
              "properties": {
                  "room_type": {
                      "type": "string",
                      "description": "The room type, e.g. Entire home apt"
                  }
              },
              "required": ["room_type"]
          }
        }          

      ]
    },
    {
      "id": "TRAVEL_FUNC_ONE_PARAM_COMPLEX_DESC_NO_EX_V01",
      "name": "Functions for Travel Use Case with simple function descriptions and no examples",
      "domain": "Travel",
      "categories": [
        "All Parameters",
        "Without Examples",
        "Complex Description"
      ],
      "num_functions": 14,
      "functions": [
        {
          "name": "get_host_name",
          "description": "Provide the name of the Airbnb’s owner.",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },
        {
          "name": "get_min_nights",
          "description": "Provide the minimum duration of stay for the Airbnb reservation.",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },
        {
          "name": "get_nr_of_reviews",
          "description": "Provide the count of guest evaluations for the Airbnb listing.",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },  
        {
          "name": "get_listing_price",
          "description": "Provide the rental cost for the Airbnb accommodation in US dollars.",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },
        {
          "name": "get_listing_by_neighbourhood_group",
          "description": "Get the listings of Airbnb properties within a designated district area.",
          "parameters": {
              "type": "object",
              "properties": {
                  "neighbourhood_group": {
                      "type": "string",
                      "description": "The name of the neighbourhood group, e.g. Brooklyn"
                  }
              },
              "required": ["neighbourhood_group"]
          }
        },
        {
          "name": "get_listings_by_review_date",
          "description": "Get the Airbnb properties associated with a particular date of feedback in the date format DD-MM-YY.",
          "parameters": {
              "type": "object",
              "properties": {
                  "last_review_date": {
                      "type": "string",
                      "description": "The date of the last review, e.g. 12-05-19"
                  }
              },
              "required": ["last_review_date"]
          }
        },
        {
          "name": "get_listings_by_min_nights",
          "description": "Get the Airbnb offerings that require a set minimum number of nights for booking.",
          "parameters": {
              "type": "object",
              "properties": {
                  "minimum_nights": {
                      "type": "string",
                      "description": "The number of minimum nights, e.g. 3"
                  }
              },
              "required": ["minimum_nights"]
          }
        },  
        {
          "name": "get_frequent_listings",
          "description": "Get the Airbnb´s that are most commonly booked.",
          "parameters": {
              "type": "object",
              "properties": {
                  "nr_of_listings": {
                      "type": "integer",
                      "description": "The number of listings, e.g. 3"
                  }
              },
              "required": ["nr_of_listings"]
          }
        },    
        {
          "name": "get_listing_by_price",
          "description": "Locate Airbnb rentals available at a specified price point in US dollars.",
          "parameters": {
              "type": "object",
              "properties": {
                  "price": {
                      "type": "integer",
                      "description": "The price of an airbnb per night, e.g. 90 dollars"
                  }
              },
              "required": ["price"]
          }
        },
        {
          "name": "get_listing_by_lower_price",
          "description": "Get the Airbnb properties priced at or below the specified amount in US dollars.",
          "parameters": {
              "type": "object",
              "properties": {
                  "price": {
                      "type": "integer",
                      "description": "The price of an airbnb per night, e.g. 90 dollars"
                  }
              },
              "required": ["price"]
          }
        },
        {
          "name": "get_neighbourhood_group",
          "description": "Get the local community association for a particular Airbnb listing",
          "parameters": {
              "type": "object",
              "properties": {
                  "name": {
                      "type": "string",
                      "description": "The name of the airbnb, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["name"]
          }
        },
        {
          "name": "get_restaurants_by_cuisine",
          "description": " Get some places that serve a particular type of cuisine",
          "parameters": {
              "type": "object",
              "properties": {
                  "cuisine": {
                      "type": "string",
                      "description": "The cuisine type, e.g. Japanese"
                  }
              },
              "required": ["cuisine"]
          }
        },
        {
          "name": "get_borough_location",
          "description": "Determine the district where a particular restaurant is situated.",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant": {
                      "type": "string",
                      "description": "The restaurant name, e.g. Junoon"
                  }
              },
              "required": ["restaurant"]
          }
        },
        {
          "name": "get_cuisine",
          "description": "Identify the culinary style or category of food that a certain dining establishment specializes in.",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant": {
                      "type": "string",
                      "description": "The restaurant name, e.g. Junoon"
                  }
              },
              "required": ["restaurant"]
          }
        },
        {
          "name": "get_listing_by_room_type",
          "description": "Search for Airbnb properties that match a specific accommodation category or room configuration.",
          "parameters": {
              "type": "object",
              "properties": {
                  "room_type": {
                      "type": "string",
                      "description": "The room type, e.g. Entire home apt"
                  }
              },
              "required": ["room_type"]
          }
        }          

      ]
    },


    {
      "id": "TRAVEL_FUNC_MULTI_PARAM_SIMPLE_DESC_NO_EX_V01",
      "name": "Functions for Travel Use Case with simple function descriptions and no examples",
      "domain": "Travel",
      "categories": [
        "All Parameters",
        "Without Examples",
        "Simple Description"
      ],
      "num_functions": 10,
      "functions": [
        {
          "name": "get_airbnb_by_price_range_neighbourhood",
          "description": "Get the listing by neighbourhood group between a specific price range in US dollars",
          "parameters": {
              "type": "object",
              "properties": {
                  "min_price": {
                      "type": "string",
                      "description": "The min price in the range"
                  },
                  "max_price": {
                      "type": "string",
                      "description": "The maximum price in the range"
                  },                
                  "neighbourhood_group": {
                      "type": "string",
                      "description": "The name of the neighbourhood group, e.g. Brooklyn"
                  }
              },
              "required": ["min_price","max_price","neighbourhood_group"]
          }
        },
        {
            "name": "get_airbnb_by_price_min_nights_and_neighborhood_group",
            "description": "Get the listing by minimum price in US dollars, minimum nights and and a specific neighbourhood group",
            "parameters": {
                "type": "object",
                "properties": {
                    "price": {
                        "type": "integer",
                        "description": "The price of an airbnb per night, e.g. 90 dollars"
                    },
                    "min_nights": {
                        "type": "integer",
                        "description": "The minimum amount of nights, e.g. 2"
                    },                
                    "neighbourhood_group": {
                        "type": "string",
                        "description": "The name of the neighbourhood group, e.g. Brooklyn"
                    }
                },
                "required": ["price","min_nights","neighbourhood_group"]
            }
        }, 
        {
            "name": "get_airbnb_by_neighbourhood_group_room_type_date",
            "description": "Get the listing by neighbourhood group, room type and last review date in the format DD-YY-MM",
            "parameters": {
                "type": "object",
                "properties": {
                    "room_type": {
                        "type": "string",
                        "description": "The type of room of an airbnb, e.g. private room"
                    },
                    "last_review_date": {
                        "type": "string",
                        "description": "The date when the last review was recorded, e.g. 23-09-2019"
                    },                
                    "neighbourhood_group": {
                        "type": "string",
                        "description": "The name of the neighbourhood group, e.g. Brooklyn"
                    }
                },
                "required": ["room_type","last_review_date","neighbourhood_group"]
            }
        },
        {
            "name": "get_airbnb_by_price_range_neighbourhood",
            "description": "Get the listing by neighbourhood group between a specific price range in US dollars",
            "parameters": {
                "type": "object",
                "properties": {
                    "min_price": {
                        "type": "string",
                        "description": "The min price in the range"
                    },
                    "max_price": {
                        "type": "string",
                        "description": "The maximum price in the range"
                    },                
                    "neighbourhood_group": {
                        "type": "string",
                        "description": "The name of the neighbourhood group, e.g. Brooklyn"
                    }
                },
                "required": ["min_price","max_price","neighbourhood_group"]
            }
        }, 
        {
            "name": "get_x_most_popular_places_in_neighbourhood_group_room_type",
            "description": "Get the x most popular airbnbs in a neighbourhood group and for a specific room type ",
            "parameters": {
                "type": "object",
                "properties": {
                    "popularity": {
                        "type": "integer",
                        "description": "The number of airbnbs to output"
                    },
                    "neighbourhood_group": {
                        "type": "string",
                        "description": "The name of the neighbourhood group, e.g. Brooklyn"
                    },                
                    "room_type": {
                        "type": "string",
                        "description": "The type of the room, e.g. Shared Room"
                    }
                },
                "required": ["popularity","neighbourhood_group","room_type"]
            }
        },
           
        {
            "name": "get_avg_by_neighbourgood_group_and_room_type",
            "description": "Get the average price in US dollars of a neighbourhood group by room type ",
            "parameters": {
                "type": "object",
                "properties": {
                    "neighbourhood_group": {
                        "type": "string",
                        "description": "The name of the neighbourhood group, e.g. Brooklyn"
                    },                
                    "room_type": {
                        "type": "string",
                        "description": "The type of the room, e.g. Shared Room"
                    }
                },
                "required": ["neighbourhood_group","room_type"]
            }
        },

        {
            "name": "get_min_cost_by_neighbourhood_group_room_type_min_nights",
            "description": "Get the least costly in US dollars airbnbs for a specific neighbourhood group,room type and minimum nights",
            "parameters": {
                "type": "object",
                "properties": {
                    "nr_requests": {
                        "type": "integer",
                        "description": "The number of airbnbs to output"
                    },
                    "neighbourhood_group": {
                        "type": "string",
                        "description": "The name of the neighbourhood group, e.g. Brooklyn"
                    },                
                    "room_type": {
                        "type": "string",
                        "description": "The type of the room, e.g. Shared Room"
                    },
                    "min_nights": {
                        "type": "string",
                        "description": "The minimum number of nights to stay"
                    }            
                },
                "required": ["nr_requests","neighbourhood_group","room_type","min_nights"]
            }
        },   

        {
            "name": "get_telephone_number_by_name_neighbourhood_group_cuisine",
            "description": "Get the telephone number of a restaurant given the neighbourhood group or cuisine",
            "parameters": {
                "type": "object",
                "properties": {
                    "restaurant": {
                        "type": "string",
                        "description": "The name of the restaurant"
                    },
                    "neighbourhood_group": {
                        "type": "string",
                        "description": "The name of the borough"
                    }, 
                    "cuisine": {
                        "type": "string",
                        "description": "The cuisine of the restaurant e.g. Japanese"
                    }
                },
                "required": ["restaurant","neighbourhood_group","cuisine"]
            }
        },

        {
            "name": "get_restaurant_by_zipcode_cuisine_borough_phone",
            "description": "Get the restaurant info by zip code, cuisine, borough and phone number",
            "parameters": {
                "type": "object",
                "properties": {
                    "zip_code": {
                        "type": "integer",
                        "description": "The zip code of the restaurant"
                    },
                    "cuisine": {
                        "type": "string",
                        "description": "The cuisine of the restaurant e.g. Japanese"
                    }, 
                    "borough": {
                        "type": "string",
                        "description": "The borough of the restaurant e.g. Bronx"
                    }, 
                    "phone": {
                        "type": "string",
                        "description": "The phone number of the restaurant"
                    }          
                },
                "required": ["zip_code","cuisine","borough","phone"]
            }
        }, 

        {
            "name": "get_info_by_name_cuisine_borough_phone",
            "description": "Get the information of a restaurant (street, building and zip code)" ,
            "parameters": {
                "type": "object",
                "properties": {
                    "restaurant": {
                        "type": "string",
                        "description": "The name of the restaurant"
                    },
                    "cuisine": {
                        "type": "string",
                        "description": "The cuisine of the restaurant e.g. Japanese"
                    }, 
                    "borough": {
                        "type": "string",
                        "description": "The borough of the restaurant e.g. Bronx"
                    }, 
                    "phone": {
                        "type": "string",
                        "description": "The phone number of the restaurant"
                    }                
                },
                "required": ["restaurant","cuisine","borough","phone"]
            }
        }   
      
      ]
    },

    {
      "id": "TRAVEL_FUNC_MULTI_CALL_SEQUENTIAL_SIMPLE_DESC_NO_EX_V01",
      "name": "Functions for Travel Use Case with simple function descriptions, multiple calls and no examples",
      "domain": "Travel",
      "categories": [
        "All Parameters",
        "Multi-call",
        "Without Examples",
        "Simple Description"
      ],
      "num_functions": 11,
      "functions": [
        {
          "name": "get_airbnb_by_price_min_nights_and_neighborhood_group",
          "description": "Get the listing by minimum price in US dollars, minimum nights and and a specific neighbourhood group",
          "parameters": {
              "type": "object",
              "properties": {
                  "price": {
                      "type": "integer",
                      "description": "The price of an airbnb per night, e.g. 90 dollars"
                  },
                  "min_nights": {
                      "type": "integer",
                      "description": "The minimum amount of nights, e.g. 2"
                  },                
                  "neighbourhood_group": {
                      "type": "string",
                      "description": "The name of the neighbourhood group, e.g. Brooklyn"
                  }
              },
              "required": ["price","min_nights","neighbourhood_group"]
          }
        },   
        {
          "name": "get_long_lat_by_name_street",
          "description": "Get the latitude and longitude of a restaurant by street",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant": {
                      "type": "string",
                      "description": "The name of the restaurant"
                  },
                  "street": {
                      "type": "string",
                      "description": "The street where the restaurant is located"
                  }             
              },
              "required": ["restaurant", "street"]
          }
        },
        {
          "name": "get_airbnb_by_lat_long",
          "description": "Get the airbnb by latitude and longitude",
          "parameters": {
              "type": "object",
              "properties": {
                  "latitude": {
                      "type": "string",
                      "description": "The latitude of the airbnb"
                  },
                  "longitude": {
                      "type": "string",
                      "description": "The longitude of the airbnb"
                  }               
              },
              "required": ["latitude", "longitude"]
          }
        },   
        {
          "name": "get_long_lat_by_airbnb",
          "description": "Get the airbnb by latitude and longitude",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing": {
                      "type": "string",
                      "description": "The airbnb's name"
                  }             
              },
              "required": ["listing"]
          }
        },
        {
          "name": "get_airbnb_address_by_lat_long",
          "description": "Get the airbnb address from longitude and latitude",
          "parameters": {
              "type": "object",
              "properties": {
                  "latitude": {
                      "type": "string",
                      "description": "The restaurant's latitude"
                  },  
                  "longitude": {
                      "type": "string",
                      "description": "The restaurant's longitude"
                  }               
              },
              "required": ["latitude","longitude"]
          }
       },
       {
          "name": "get_restaurant_by_airbnb_closeness",
          "description": "Get the restaurant close to an airbnb",
          "parameters": {
              "type": "object",
              "properties": {
                  "latitude": {
                      "type": "string",
                      "description": "The airbnb's latitude"
                  },  
                  "longitude": {
                      "type": "string",
                      "description": "The airbnb's longitude"
                  }                
              },
              "required": ["latitude","longitude"]
          }
        },
        {
          "name": "get_info_restaurant_with_zipcode_street_building",
          "description": "Get the restaurant info (zipcode,street and building)",
          "parameters": {
              "type": "object",
              "properties": {
                  "latitude": {
                      "type": "string",
                      "description": "The airbnb's latitude"
                  },  
                  "longitude": {
                      "type": "string",
                      "description": "The airbnb's longitude"
                  }                 
              },
              "required": ["latitude","longitude"]
          }
        },
        {
          "name": "get_restaurants_by_ratings",
          "description": "Get the restaurants according to a specific rating",
          "parameters": {
              "type": "object",
              "properties": {
                  "rating": {
                      "type": "string",
                      "description": "The rating of the restaurant"
                  }                 
              },
              "required": ["rating"]
          }
        },
        {
          "name": "get_neighborhood_by_rest_specification",
          "description": "Get the restaurants according to a specific neighborhood",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurants": {
                      "type": "string",
                      "description": "The list of restaurant name"
                  },  
                  "neigborhood": {
                      "type": "string",
                      "description": "The neighborhood of a restaurant"
                  }              
              },
              "required": ["restaurants","neigborhood"]
          }
        },
        {
          "name": "get_airbnb_with_max_reviews",
          "description": "Get the airbnbs with max number of reviews at a specific neighborhood group and room type",
          "parameters": {
              "type": "object",
              "properties": {
                  "popularity": {
                      "type": "int",
                      "description": "The number of airbnbs to show"
                  },  
                  "neighbourhood_group": {
                      "type": "string",
                      "description": "The neighborhood of an airbnb"
                  }, 
                  "room_type": {
                      "type": "string",
                      "description": "The type of room of an airbnb"
                  }              
              },
              "required": ["popularity","neigborhood_group","room_type"]
          }
        },
        {
          "name": "get_restaurant_long_lat_by_zipcode_cuisine_borough_phone",
          "description": "Get the restaurant info and latitude and longitude by zip code, cuisine, borough and phone number",
          "parameters": {
              "type": "object",
              "properties": {
                  "zip_code": {
                      "type": "number",
                      "description": "The zip code of the restaurant"
                  },
                  "cuisine": {
                      "type": "string",
                      "description": "The cuisine of the restaurant e.g. Japanese"
                  }, 
                  "borough": {
                      "type": "string",
                      "description": "The borough of the restaurant e.g. Bronx"
                  }, 
                  "phone": {
                      "type": "string",
                      "description": "The phone number of the restaurant"
                  }                
              },
              "required": ["zip_code","cuisine","borough","phone"]
          }
        }      
      ]
    },
    {
      "id": "TRAVEL_FUNC_MULTI_CALL_PARALLEL_SIMPLE_DESC_NO_EX_V01",
      "name": "Functions for Travel Use Case with simple function descriptions, multiple calls and no examples",
      "domain": "Travel",
      "categories": [
        "All Parameters",
        "Multi-call",
        "Without Examples",
        "Simple Description"
      ],
      "num_functions": 7,
      "functions": [ 
        {
          "name": "get_avg_prep_time_by_restaurant_name",
          "description": "Get average prep time of a restaurant",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant_name": {
                      "type": "string",
                      "description": "The restaurant name"
                  }
              },
              "required": ["restaurant_name"]
          }
        },
        {
          "name": "get_avg_costs_by_restaurant_name",
          "description": "Get average costs of a restaurant in US dollars",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant_name": {
                      "type": "string",
                      "description": "The restaurant name"
                  }
              },
              "required": ["restaurant_name"]
          }
       },
       {
          "name": "get_rating_by_restaurant_name",
          "description": "Get rating by restaurant name",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant_name": {
                      "type": "string",
                      "description": "The restaurant name"
                  }
              },
              "required": ["restaurant_name"]
          }
        },
        {
          "name": "get_avg_delivery_time_by_restaurant_name",
          "description": "Get average delivery time of a restaurant",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant_name": {
                      "type": "string",
                      "description": "The restaurant name"
                  }
              },
              "required": ["restaurant_name"]
          }
        },
        {
          "name": "get_restaurant_by_cuisine_borough",
          "description": "Get restaurant by borough and cuisine",
          "parameters": {
              "type": "object",
              "properties": {
                  "borough": {
                      "type": "string",
                      "description": "The borough, e.g. Manhattan"
                  },
                  "cuisine": {
                      "type": "string",
                      "description": "The cuisine type of the restaurant, e.g Italian"
                  }
              },
              "required": ["borough", "cuisine"]
          }
       },
       {
          "name": "get_neighbourhood_group",
          "description": "Get the neighbourhood group of a specific airbnb",
          "parameters": {
              "type": "object",
              "properties": {
                  "name": {
                      "type": "string",
                      "description": "The name of the airbnb, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["name"]
          }
       },
       {
          "name": "get_ratings_per_cuisines",
          "description": "Get restaurant by borough and cuisine",
          "parameters": {
              "type": "object",
              "properties": {
                  "cuisines": {
                      "type": "string",
                      "description": "The cuisine type, e.g Italian"
                  }
              },
              "required": ["cuisines"]
          }
       }             
      
      ]
    },

    {
      "id": "MUSIC_FUNC_ONE_PARAM_SIMPLE_DESC_NO_EX_V01",
      "name": "Music - 1 parameter functions with simple function description, no examples.",
      "domain": "Music",
      "categories": ["1 Parameter", "Without Examples", "Simple Description"],
      "num_functions": 10,
      "functions": [
        {
          "name": "albums_by_artist_1",
          "description": "Returns all albums by a given artist.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist."
              }
            },
            "required": ["artist_name"]
          }
        },
        {
          "name": "top_rated_albums",
          "description": "Returns the top-rated albums based on average rating.",
          "parameters": {
            "type": "object",
            "properties": {
              "n": {
                "type": "number",
                "description": "The number of albums to return. Default is 10."
              }
            },
            "required": []
          }
        },
        {
          "name": "artist_by_album",
          "description": "Returns the artist of an album by its name.",
          "parameters": {
            "type": "object",
            "properties": {
              "album_name": {
                "type": "string",
                "description": "The name of the album."
              }
            },
            "required": ["album_name"]
          }
        },
        {
          "name": "albums_by_genres",
          "description": "Retrieves a list of albums that contain any of the specified genres.",
          "parameters": {
            "type": "object",
            "properties": {
              "genres": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of genre strings the albums must contain."
              }
            },
            "required": ["genres"]
          }
        },
        {
          "name": "albums_by_release_date_1",
          "description": "Retrieves all albums released on a specific date.",
          "parameters": {
            "type": "object",
            "properties": {
              "release_date": {
                "type": "string",
                "description": "The release date to filter albums by. Can be in YYYY (year), YYYY-MM (year-month), or YYYY-MM-DD (specific date) format."
              }
            },
            "required": ["release_date"]
          }
        },
        {
          "name": "top_streamed_songs",
          "description": "Returns the n most streamed songs.",
          "parameters": {
            "type": "object",
            "properties": {
              "n": {
                "type": "number",
                "description": "The number of top-streamed songs to return. Default is 10."
              }
            },
            "required": []
          }
        },
        {
          "name": "songs_by_release_date",
          "description": "Retrieves all songs released on a specific date, in a specific month, or in a specific year, based on the provided release date.",
          "parameters": {
            "type": "object",
            "properties": {
              "release_date": {
                "type": "string",
                "description": "The release date to filter songs by. Can be in YYYY (year), YYYY-MM (year-month), or YYYY-MM-DD (specific date) format."
              }
            },
            "required": ["release_date"]
          }
        },
        {
          "name": "songs_by_longest_duration",
          "description": "Returns the top 'n' songs sorted by their duration, from longest to shortest.",
          "parameters": {
            "type": "object",
            "properties": {
              "n": {
                "type": "number",
                "description": "The number of top songs to return, based on duration. Defaults to 10 if not specified."
              }
            },
            "required": []
          }
        },
        {
          "name": "artist_by_song",
          "description": "Returns the artist of the song.",
          "parameters": {
            "type": "object",
            "properties": {
              "song_name": {
                "type": "string",
                "description": "The name of the song."
              }
            },
            "required": ["song_name"]
          }
        },
        {
          "name": "songs_by_artist_1",
          "description": "Returns all songs by a given artist.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist."
              }
            },
            "required": ["artist_name"]
          }
        }
      ]
    },
    {
      "id": "MUSIC_FUNC_MULTI_PARAM_SIMPLE_DESC_NO_EX_V01",
      "name": "Music - Multi(>1) parameter functions with simple function description, no examples.",
      "domain": "Music",
      "categories": [
        "Multi Parameters",
        "Without Examples",
        "Simple Description"
      ],
      "num_functions": 16,
      "functions": [
        {
          "name": "filter_albums_by_date_range",
          "description": "Filters and retrieves albums released within a specified date range. The range is inclusive of the start and end dates.",
          "parameters": {
            "type": "object",
            "properties": {
              "start_date": {
                "type": "string",
                "description": "The start date of the date range for filtering albums. Can be in YYYY, YYYY-MM, or YYYY-MM-DD format."
              },
              "end_date": {
                "type": "string",
                "description": "The end date of the date range for filtering albums. Can be in YYYY, YYYY-MM, or YYYY-MM-DD format."
              }
            },
            "required": ["start_date", "end_date"]
          }
        },
        {
          "name": "albums_by_genres2",
          "description": "Retrieves albums that match specified inclusion and exclusion genre criteria.",
          "parameters": {
            "type": "object",
            "properties": {
              "genres_in": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of genre strings the albums must contain."
              },
              "genres_out": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of genre strings the albums must not contain."
              }
            },
            "required": ["genres_in", "genres_out"]
          }
        },
        {
          "name": "albums_by_date_and_genres",
          "description": "Retrieves albums released on a specific date, in a specific month, or in a specific year that match any of the specified genres.",
          "parameters": {
            "type": "object",
            "properties": {
              "release_date": {
                "type": "string",
                "description": "The release date of the albums. Can be in YYYY, YYYY-MM, or YYYY-MM-DD format."
              },
              "genres": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of genre strings to filter albums by."
              }
            },
            "required": ["release_date", "genres"]
          }
        },
        {
          "name": "high_rated_albums",
          "description": "Retrieves albums with an average rating above a specified threshold and a minimum number of ratings.",
          "parameters": {
            "type": "object",
            "properties": {
              "rating_threshold": {
                "type": "number",
                "description": "The minimum average rating for the albums. Defaults to 4.0 if not specified."
              },
              "min_ratings": {
                "type": "number",
                "description": "The minimum number of ratings an album must have. Defaults to 100 if not specified."
              }
            },
            "required": []
          }
        },
        {
          "name": "top_streamed_songs_by_artist",
          "description": "Retrieves the top streamed songs by specific artist, sorted by number of streams.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist."
              },
              "n": {
                "type": "number",
                "description": "The number of top-streamed songs to return. Defaults to 5 if not specified."
              }
            },
            "required": ["artist_name"]
          }
        },
        {
          "name": "songs_by_danceability_explicitness",
          "description": "Retrieves songs that meet a specified danceability threshold and explicitness criteria.",
          "parameters": {
            "type": "object",
            "properties": {
              "danceability_threshold": {
                "type": "number",
                "description": "The minimum danceability rating (percentage) to filter songs by."
              },
              "explicit": {
                "type": "boolean",
                "description": "Flag to filter songs by explicit content. Defaults to True if not specified."
              }
            },
            "required": ["danceability_threshold"]
          }
        },
        {
          "name": "albums_by_year_genres_and_descriptors",
          "description": "Retrieves albums released on a specific date, month, or year, that fit within specified genres and match given descriptors.",
          "parameters": {
            "type": "object",
            "properties": {
              "release_date": {
                "type": "string",
                "description": "Release date to filter albums by, in YYYY, YYYY-MM, or YYYY-MM-DD format."
              },
              "genres": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of genres to filter albums by."
              },
              "descriptors": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of descriptors to match albums with."
              }
            },
            "required": ["release_date", "genres", "descriptors"]
          }
        },
        {
          "name": "high_rated_reviewed_albums",
          "description": "Retrieves albums that meet specific criteria of high average ratings, a minimum number of ratings, and a minimum number of reviews.",
          "parameters": {
            "type": "object",
            "properties": {
              "rating_threshold": {
                "type": "number",
                "description": "The minimum average rating for the albums."
              },
              "min_ratings": {
                "type": "number",
                "description": "The minimum number of ratings an album must have."
              },
              "review_threshold": {
                "type": "number",
                "description": "The minimum number of reviews an album must have."
              }
            },
            "required": ["rating_threshold", "min_ratings", "review_threshold"]
          }
        },
        {
          "name": "songs_by_danceability_explicitness_speechiness",
          "description": "Retrieves songs based on specified thresholds for danceability, speechiness, and explicit content criteria.",
          "parameters": {
            "type": "object",
            "properties": {
              "danceability_threshold": {
                "type": "number",
                "description": "The minimum danceability rating (percentage) to filter songs by."
              },
              "speechiness_threshold": {
                "type": "number",
                "description": "The minimum speechiness rating (percentage) to filter songs by."
              },
              "explicit": {
                "type": "boolean",
                "description": "Flag to filter songs by explicit content. Defaults to True if not specified."
              }
            },
            "required": ["danceability_threshold", "speechiness_threshold"]
          }
        },
        {
          "name": "top_streamed_songs_by_artist_date",
          "description": "Retrieves the top streamed songs by a specific artist, released on a given date, month, or year.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist whose songs are to be retrieved."
              },
              "release_date": {
                "type": "string",
                "description": "The release date of the songs to filter by, in YYYY, YYYY-MM, or YYYY-MM-DD format."
              },
              "n": {
                "type": "number",
                "description": "The number of top-streamed songs to return. Defaults to 5 if not specified."
              }
            },
            "required": ["artist_name", "release_date"]
          }
        },
        {
          "name": "unique_albums",
          "description": "Finds albums that are distinctive in terms of genre diversity and artist collaboration but have lower average ratings.",
          "parameters": {
            "type": "object",
            "properties": {
              "genres_threshold": {
                "type": "number",
                "description": "The minimum number of genres an album must cover."
              },
              "artist_count_threshold": {
                "type": "number",
                "description": "The minimum number of artists required to be involved in an album."
              },
              "max_rating_threshold": {
                "type": "number",
                "description": "The maximum average rating that an album can have."
              }
            },
            "required": [
              "genres_threshold",
              "artist_count_threshold",
              "max_rating_threshold"
            ]
          }
        },
        {
          "name": "albums_by_dates_genres_rating",
          "description": "Retrieves albums released within a specific date range, filtered by genres to include and exclude, and having an average rating above a specified minimum threshold.",
          "parameters": {
            "type": "object",
            "properties": {
              "start_date": {
                "type": "string",
                "description": "The start date of the date range for filtering albums, in YYYY-MM-DD format."
              },
              "end_date": {
                "type": "string",
                "description": "The end date of the date range for filtering albums, in YYYY-MM-DD format."
              },
              "genre_in": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of genres that the albums must include."
              },
              "genre_out": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of genres that the albums must not include."
              },
              "min_rating": {
                "type": "number",
                "description": "The minimum average rating threshold for the albums."
              }
            },
            "required": [
              "start_date",
              "end_date",
              "genre_in",
              "genre_out",
              "min_rating"
            ]
          }
        },
        {
          "name": "high_rated_reviewed_albums_by_date",
          "description": "Retrieves albums that exceed a certain rating threshold, have a minimum number of ratings and reviews, and are released on a specified date.",
          "parameters": {
            "type": "object",
            "properties": {
              "rating_threshold": {
                "type": "number",
                "description": "The minimum average rating for the albums."
              },
              "min_ratings": {
                "type": "number",
                "description": "The minimum number of ratings an album must have."
              },
              "review_threshold": {
                "type": "number",
                "description": "The minimum number of reviews an album must have."
              },
              "release_date": {
                "type": "string",
                "description": "The release date of the albums, in YYYY, YYYY-MM, or YYYY-MM-DD format."
              }
            },
            "required": [
              "rating_threshold",
              "min_ratings",
              "review_threshold",
              "release_date"
            ]
          }
        },
        {
          "name": "top_streamed_songs_by_artist_date_range",
          "description": "Finds the top streamed songs by a specific artist within a given date range, and returns a specified number of these top songs.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist whose songs are to be retrieved."
              },
              "start_date": {
                "type": "string",
                "description": "The start date of the date range for filtering songs, in YYYY-MM-DD format."
              },
              "end_date": {
                "type": "string",
                "description": "The end date of the date range for filtering songs, in YYYY-MM-DD format."
              },
              "n": {
                "type": "number",
                "description": "The number of top-streamed songs to return. Defaults to 5 if not specified."
              }
            },
            "required": ["artist_name", "start_date", "end_date", "n"]
          }
        },
        {
          "name": "speechiness_songs",
          "description": "Finds songs based on specific criteria of speechiness, energy, explicit content, and BPM, allowing a tolerance range for speechiness and energy values.",
          "parameters": {
            "type": "object",
            "properties": {
              "speechiness": {
                "type": "number",
                "description": "Target threshold for speechiness with an acceptable deviation defined by the threshold."
              },
              "energy": {
                "type": "number",
                "description": "Target threshold for energy with an acceptable deviation defined by the threshold."
              },
              "explicit": {
                "type": "boolean",
                "description": "Flag indicating whether to filter for explicit content."
              },
              "bpm": {
                "type": "number",
                "description": "Target Beats Per Minute (BPM) to filter songs by."
              },
              "threshold": {
                "type": "number",
                "description": "Range value to determine the acceptable deviation from the speechiness and energy thresholds. Defaults to 20 if not specified."
              }
            },
            "required": [
              "speechiness",
              "energy",
              "explicit",
              "bpm",
              "threshold"
            ]
          }
        },
        {
          "name": "instrumental_songs",
          "description": "Identifies songs based on specified levels of instrumentalness, valence, danceability, and BPM, with a tolerance range for each parameter.",
          "parameters": {
            "type": "object",
            "properties": {
              "instrumentalness": {
                "type": "number",
                "description": "Target threshold for instrumentalness, with a specified deviation range."
              },
              "valence": {
                "type": "number",
                "description": "Target threshold for valence, with a specified deviation range."
              },
              "danceability": {
                "type": "number",
                "description": "Target threshold for danceability, with a specified deviation range."
              },
              "bpm": {
                "type": "number",
                "description": "Target Beats Per Minute (BPM) to filter songs by."
              },
              "threshold": {
                "type": "number",
                "description": "Range value to determine the acceptable deviation from the instrumentalness, valence, and danceability thresholds."
              }
            },
            "required": [
              "instrumentalness",
              "valence",
              "danceability",
              "bpm",
              "threshold"
            ]
          }
        }
      ]
    },
    {
      "id": "MUSIC_FUNC_ONE_PARAM_COMPLEX_DESC_NO_EX_V01",
      "name": "Music - 1 parameter functions with complex function description, no examples.",
      "domain": "Music",
      "categories": ["1 Parameter", "Without Examples", "Complex Description"],
      "num_functions": 10,
      "functions": [
        {
          "name": "albums_by_artist_1",
          "description": "Fetches the collection of music releases associated with a specific performer.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist."
              }
            },
            "required": ["artist_name"]
          }
        },
        {
          "name": "top_rated_albums",
          "description": "Retrieves the records of most favoured music releases ranked by their scores.",
          "parameters": {
            "type": "object",
            "properties": {
              "n": {
                "type": "number",
                "description": "The number of albums to return. Default is 10."
              }
            },
            "required": []
          }
        },
        {
          "name": "artist_by_album",
          "description": "Fetches the singer who released a stated collection.",
          "parameters": {
            "type": "object",
            "properties": {
              "album_name": {
                "type": "string",
                "description": "The name of the album."
              }
            },
            "required": ["album_name"]
          }
        },
        {
          "name": "albums_by_genres",
          "description": "Retrieves a list of records that can be classified to be of the specified category/type.",
          "parameters": {
            "type": "object",
            "properties": {
              "genres": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of genre strings the albums must contain."
              }
            },
            "required": ["genres"]
          }
        },
        {
          "name": "albums_by_release_date_1",
          "description": "Retrieves all collections launched during a particular timeframe.",
          "parameters": {
            "type": "object",
            "properties": {
              "release_date": {
                "type": "string",
                "description": "The release date to filter albums by. Can be in YYYY (year), YYYY-MM (year-month), or YYYY-MM-DD (specific date) format."
              }
            },
            "required": ["release_date"]
          }
        },
        {
          "name": "top_streamed_songs",
          "description": "Retrieves the trendy tracks which the vast majority has been influenced by",
          "parameters": {
            "type": "object",
            "properties": {
              "n": {
                "type": "number",
                "description": "The number of top-streamed songs to return. Default is 10."
              }
            },
            "required": []
          }
        },
        {
          "name": "songs_by_release_date",
          "description": "Retrieves all musical pieces launched during a particular timeframe.",
          "parameters": {
            "type": "object",
            "properties": {
              "release_date": {
                "type": "string",
                "description": "The release date to filter songs by. Can be in YYYY (year), YYYY-MM (year-month), or YYYY-MM-DD (specific date) format."
              }
            },
            "required": ["release_date"]
          }
        },
        {
          "name": "songs_by_longest_duration",
          "description": "Retrieves the n highest-ranking tunes arranged by their length.",
          "parameters": {
            "type": "object",
            "properties": {
              "n": {
                "type": "number",
                "description": "The number of top songs to return, based on duration. Defaults to 10 if not specified."
              }
            },
            "required": []
          }
        },
        {
          "name": "artist_by_song",
          "description": "Fetches the performer who released a stated track.",
          "parameters": {
            "type": "object",
            "properties": {
              "song_name": {
                "type": "string",
                "description": "The name of the song."
              }
            },
            "required": ["song_name"]
          }
        },
        {
          "name": "songs_by_artist_1",
          "description": "Retrieves the music recordings that have been released by the specified singer.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist."
              }
            },
            "required": ["artist_name"]
          }
        }
      ]
    },
    {
      "id": "MUSIC_FUNC_COMPLEX_DESC_NO_EX_V2",
      "name": "Music - one and multi parameter functions with elaborative function description, no examples.",
      "domain": "Music",
      "categories": [
        "1 Parameter",
        "Multiple Parameter",
        "Without Examples",
        "Complex Description"
      ],
      "num_functions": 11,
      "functions": [
        {
          "name": "artist_info",
          "description": "Retrieves detailed information for a specified artist, including attributes like name, band status, formation/birth date, city, country, genres, and related artists.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist. Matches against the 'Name' column in the ARTIST_SQL dataset."
              }
            },
            "required": ["artist_name"]
          }
        },
        {
          "name": "album_info",
          "description": "Fetches detailed information about a specific album, covering attributes such as album name, artist name, release date, genres, descriptors, average rating, rating count, and review count.",
          "parameters": {
            "type": "object",
            "properties": {
              "album_name": {
                "type": "string",
                "description": "The name of the album. Matches against the 'release_name' column in the ALBUMS_SQL dataset."
              }
            },
            "required": ["album_name"]
          }
        },
        {
          "name": "song_info",
          "description": "Provides detailed information on a specific song, including track name, artist(s) name, album name, artist count, release date, streams, BPM, key, mode, danceability, valence, energy, acousticness, instrumentalness, liveness, speechiness, and duration in minutes.",
          "parameters": {
            "type": "object",
            "properties": {
              "song_name": {
                "type": "string",
                "description": "The name of the song. Matches against the 'track_name' column in the SONGS_SQL dataset."
              }
            },
            "required": ["song_name"]
          }
        },
        {
          "name": "albums_by_artist_2",
          "description": "Retrieves all albums by a specific artist, searching through the 'artist_name' column in the ALBUMS_SQL dataset. It includes album name, artist name, release date, genres, descriptors, average rating, rating count, and review count.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The artist's name to search albums for. The search is performed within the 'artist_name' column, supporting partial matches."
              }
            },
            "required": ["artist_name"]
          }
        },
        {
          "name": "artists_by_genres",
          "description": "Finds artists that match any of the specified genres, utilizing the 'genres' column in the ARTIST_SQL dataset. It covers artist's name, is_band status, formation/birth date, city, country, genres, and related artists.",
          "parameters": {
            "type": "object",
            "properties": {
              "genres": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of genre strings to filter artists by. The filtering checks the 'genres' column for any matches."
              }
            },
            "required": ["genres"]
          }
        },
        {
          "name": "songs_by_album",
          "description": "Retrieves all songs from a specific album, including details such as track name, artist(s) name, album name, artist count, release date, streams, and various musical and acoustic properties like BPM, danceability, and duration in minutes.",
          "parameters": {
            "type": "object",
            "properties": {
              "album_name": {
                "type": "string",
                "description": "The name of the album to find songs for. Matches against the 'album_name' column in the SONGS_SQL dataset."
              }
            },
            "required": ["album_name"]
          }
        },
        {
          "name": "max_rating_given_albums",
          "description": "Finds the highest average rating from a list of specified albums. Returns the maximum average rating and the names of albums that share this rating. Relies on 'release_name' for album identification and 'avg_rating' for evaluation.",
          "parameters": {
            "type": "object",
            "properties": {
              "albums": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of album names to evaluate. The function searches the 'release_name' column in the ALBUMS_SQL dataset."
              }
            },
            "required": ["albums"]
          }
        },
        {
          "name": "sum_streams_given_songs",
          "description": "Calculates the total number of streams for a specified list of songs. Accepts either a list of song names or a single comma-separated string of song names. Utilizes the 'track_name' for song identification and 'streams' for summing.",
          "parameters": {
            "type": "object",
            "properties": {
              "songs": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of song names, or a single string of comma-separated song names, to calculate total streams for. Matches against the 'track_name' column in the SONGS_SQL dataset."
              }
            },
            "required": ["songs"]
          }
        },
        {
          "name": "highest_rated_albums",
          "description": "Retrieves albums that have an average rating above a specified threshold and a minimum number of ratings. Filters based on 'avg_rating' and 'rating_count' columns, providing detailed album information.",
          "parameters": {
            "type": "object",
            "properties": {
              "rating_threshold": {
                "type": "number",
                "default": 4.0,
                "description": "The minimum average rating albums must meet to be included. Searches the 'avg_rating' column in the ALBUMS_SQL dataset."
              },
              "min_ratings": {
                "type": "number",
                "default": 100,
                "description": "The minimum number of ratings an album must have to be considered. Filters using the 'rating_count' column."
              }
            },
            "required": []
          }
        },
        {
          "name": "albums_by_release_date_2",
          "description": "Retrieves all albums released on a specific date, in a specific month, or in a specific year, based on the provided release date, searching through the 'release_date' column in the ALBUMS_SQL dataset. It includes album name, artist name, release date, genres, descriptors, average rating, rating count, and review count.",
          "parameters": {
            "type": "object",
            "properties": {
              "release_date": {
                "type": "string",
                "description": "The release date to filter albums by. Can be in YYYY (year), YYYY-MM (year-month), or YYYY-MM-DD (specific date) format."
              }
            },
            "required": ["release_date"]
          }
        },
        {
          "name": "songs_by_artist_2",
          "description": "Retrieves all songs by a specific artist, searching through the 'artist(s)_name' column in the SONGS_SQL dataset,  including details such as track name, artist(s) name, album name, artist count, release date, streams, and various musical and acoustic properties like BPM, danceability, and duration in minutes.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The artist's name to search songs for. The search is performed within the 'artist(s)_name' column, supporting partial matches."
              }
            },
            "required": ["artist_name"]
          }
        }
      ]
    }
  ]
}
