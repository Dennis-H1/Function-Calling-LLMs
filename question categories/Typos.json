{
  "question_sets": [
    {
      "id": "MUSIC_Q_SINGLE_STEP_ONE_SHOT_V01_TYPOS",
      "name": "Mannheim Function Calling Benchmark: Questions w/ Single Parameters, One Step and One Shot",
      "domain": "Music",
      "date": "2024-01-15",
      "description": "Simple, single step questions designed to test performance of LLM when provided questions are with typos.",
      "authors": ["Dennis Heinz", "Saman Khursheed", "Zeynep Eroglu"],
      "license": "Apache 2.0",
      "function_sets": ["MUSIC_FUNC_ONE_PARAM_SIMPLE_DESC_NO_EX_V01", "MUSIC_FUNC_ONE_PARAM_COMPLEX_DESC_NO_EX_V01"],
      "questions": [
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_TYP_Q1",
          "category": "Typos",
          "question": "Hi! I am a fan of Dua Lepa. Please provide me the list of her songs. Return the answer in JSON format: {'songs': [song_names_here]}",
          "motivation": "Evaluate the ability to correctly identify typos in short tail entities.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["songs_by_artist_1"],
                "parameters": [{ "artist_name": "Dua Lipa" }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "songs": [
                  "Dance The Night (From Barbie The Album)",
                  "Cold Heart - PNAU Remix",
                  "One Kiss (with Dua Lipa)",
                  "Don't Start Now",
                  "Levitating (feat. DaBaby)",
                  "No Lie",
                  "Sweetest Pie",
                  "Levitating",
                  "Potion (with Dua Lipa & Young Thug)"
                ]
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_TYP_Q2",
          "category": "Typos",
          "question": "Provide me the list of albums of Pink Sifu. Return the answer in JSON format: {'albums': [album_names_here]}",
          "motivation": "Evaluate the ability to correctly identify typos in long tail entities.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["albums_by_artist_1"],
                "parameters": [{ "artist_name": "Pink Siifu" }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "albums": [
                  "Negro"
                ]
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_TYP_Q3",
          "category": "Typos",
          "question": "Who is the atist of of albm 'Loveless'? Return the answer in JSON format: {'artist':'name_of_artist'}",
          "motivation": "Evaluate the ability to correctly identify simple typos.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["artist_by_album"],
                "parameters": [{ "album_name": "Loveless" }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "artist": "My Bloody Valentine"
              }
            },
            "comment": null
          }
        }
      ]
    },
    {
      "id": "MUSIC_Q_SINGLE_STEP_ONE_SHOT_MULTI_PARAM_V01_TYPOS",
      "name": "Mannheim Function Calling Benchmark: Questions w/ Multiple Parameters, Single Step and One Shot",
      "domain": "Music",
      "date": "2024-01-15",
      "description": "Simple single step questions with typos designed to test performance of LLM with multi parameter functions",
      "authors": ["Dennis Heinz", "Saman Khursheed", "Zeynep Eroglu"],
      "license": "Apache 2.0",
      "function_sets": ["MUSIC_FUNC_MULTI_PARAM_SIMPLE_DESC_NO_EX_V01"],
      "questions": [
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_TYP_Q1",
          "category": "Typos",
          "question": "Can you retrieve the song released on bsextile by only Bad Bunny among his top 5 streamed songs? Return the answer in JSON format: {'song': 'song_name_here'}",
          "motivation": "Ability to correctly identify simple typos and aggregate data about mentioned day from the output of called function.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["top_streamed_songs_by_artist"],
                "parameters": [{ "artist_name": "Bad Bunny", "n": 5 }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "song": "A Tu Merced"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_TYP_Q2",
          "category": "Typos",
          "question": "Considering the albums with more than 4 genres, more than 2 artists, and a rating lower than 3.5, please provide the count of albums that include rthmic in their descriptors. If there are any typos, feel free to correct them for accurate results. Return the answer in JSON format: {'albums': [album_names_here], 'album_count': count_of_albums}",
          "motivation": "Ability to correctly identify simple typos and make an inference from the output about desciptors and make calculation.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["unique_albums"],
                "parameters": [
                  {
                    "genres_threshold": 4,
                    "artist_count_threshold": 2,
                    "max_rating_threshold": 3.5
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "albums": ["Cherry Bomb","Bastard"],
                "album_count": 2
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_TYP_Q3",
          "category": "Typos",
          "question": "How many albums among the albums which have min. rating higher than 4.22, review count higher than 100 and rating count higher than 1000  were released before nineteen sevnty five? Return the answer in JSON format: {'albums': [album_names_here], 'album_count': count_of_albums}",
          "motivation": "Evaluate the ability to correctly identify simple typos and aggregate and make a calculation.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["high_rated_reviewed_albums"],
                "parameters": [
                  {
                    "rating_threshold": 4.22,
                    "min_ratings": 1000,
                    "review_threshold": 100
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "albums": ["The Velvet Underground & Nico","In the Court of the Crimson King","Abbey Road","Revolver","The Rise and Fall of Ziggy Stardust and the Spiders From Mars","Kind of Blue","A Love Supreme","Red","The Black Saint and the Sinner Lady"],
                "album_count": 9
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_TYP_Q4",
          "category": "Typos",
          "question": "Identify the album or albums from albums with a minimum rating higher than 4.22, a review count exceeding 100, and a rating count surpassing 1000, where the album title is a colr.If there are any typos, feel free to correct them for accurate results. Return the answer in JSON format: {'album': 'color_album_name_here'}",
          "motivation": "Evaluate the ability to correctly identify simple typos and infer about album names' meanings.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["high_rated_reviewed_albums"],
                "parameters": [
                  {
                    "rating_threshold": 4.22,
                    "min_ratings": 1000,
                    "review_threshold": 100
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "album": "Red"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_TYP_Q5",
          "category": "Typos",
          "question": "From the albums with more than 4 genres, more than 2 artists, and a rating lower than 3.5, please identify the album whose name signifies a machine used to represent the orbits of astroomical bodies.If there are any typos, feel free to correct them for accurate results. Return the answer in JSON format: {'album': 'specified_album_name_here'}",
          "motivation": "Evaluate the ability to correctly identify simple typos and understand the definition in the question and infer about album names' meanings.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["unique_albums"],
                "parameters": [
                  {
                    "genres_threshold": 4,
                    "artist_count_threshold": 2,
                    "max_rating_threshold": 3.5
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "album": "Planetarium"
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_TYP_Q6",
          "category": "Typos",
          "question": "How many albums, among those with more than 4 genres, more than 2 artists, and a rating lower than 3.5, include 'malvocals' in their descriptors?If there are any typos, feel free to correct them for accurate results. Return the answer in JSON format: {'albums': [malevocals_album_names_here], 'album_count': count_of_albums}",
          "motivation": "Evaluate the ability to correctly identify simple typos and aggregate and make a calculation.",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["unique_albums"],
                "parameters": [
                  {
                    "genres_threshold": 4,
                    "artist_count_threshold": 2,
                    "max_rating_threshold": 3.5
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "albums": ["Wolf","Cherry Bomb","Goblin","Bastard","Trash Island","Planetarium"],
                "album_count": 6
              }
            },
            "comment": null
          }
        },
        {
          "id": "MUSIC_SINGLE_STEP_ONE_SHOT_TYP_Q7",
          "category": "Typos",
          "question": "Among the albums which have more than 4 genes, more than 2 artists and rating lower than 3.5, which one has the loest review count? Please provide only album(s) name. If there are any typos, feel free to correct them for accurate results. Return the answer in JSON format: {'album': 'lowest_reviewed_album_name_here'}",
          "motivation": "Evaluate the ability to correctly identify more than one simple typos and make an order in ascending order and infer to the lowest value",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["unique_albums"],
                "parameters": [
                  {
                    "genres_threshold": 4,
                    "artist_count_threshold": 2,
                    "max_rating_threshold": 3.5
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "album": "Trash Island"
              }
            },
            "comment": null
          }
        }
      ]
    },
    {
      "id": "TRAVEL_Q_SINGLE_STEP_ONE_SHOT_V01_TYPOS",
      "name": "Mannheim Function Calling Benchmark: Questions w/ Single Parameters, One Step and One Shot",
      "domain": "Travel",
      "date": "2024-01-15",
      "description": "Simple, single step questions designed to test a subset of questions with typos.",
      "authors": ["Deidamea Bajri", "Serxhina Kutrolli","Stiliana Jano"],
      "license": "Apache License 2.0",
      "function_sets": ["TRAVEL_FUNC_ONE_PARAM_SIMPLE_DESC_NO_EX_V01"],
      "questions": [
        {
          "id": "TRAVEL_SINGLE_STEP_ONE_SHOT_TYPO_Q1",
          "category": "Typos",
          "question": "Can you please help me find a place to stay in New York which cost cen dollars? Return the answer in JSON format: {'airbnb':[my_airbnb]}",
          "motivation": "Testing the ability of the LLM to understand a typo and correct it approprietely (cen instead of 10)",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_listing_by_price"],
                "parameters": [{ "price": 10 }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": ["Room with a view"]
              }
            }
          }
        },
        {
          "id": "TRAVEL_SINGLE_STEP_ONE_SHOT_TYPO_Q2",
          "category": "Typos",
          "question": "Can you please help me find a place to stay in New York which cost hundred and twenty and four? Please return at most 10 entries. Return the answer in JSON format: {'airbnb':[my_airbnb]}",
          "motivation": "Testing the ability of the LLM to understand a typo and correct it approprietely (twenty four instead of twenty and four)",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_listing_by_price"],
                "parameters": [{ "price": 124 }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": ["Cute apartment with Backyard"]
              }
            }
          }
        },   
        {
          "id": "TRAVEL_SINGLE_STEP_ONE_SHOT_TYPO_Q3",
          "category": "Typos",
          "question": "Can you please help me find somewhere to stay in Bronks? Please return at most 10 entries. Return the answer in JSON format: {'airbnb':[my_airbnb]}",
          "motivation": "Testing the ability of the LLM to understand a typo and correct it approprietely (Bronx instead of Bronks)",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_listing_by_neighbourhood_group"],
                "parameters": [{ "neighbourhood_group": "Bronx" }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                  "Apartment around the park",
                  "Bronx Apartment College Ave",
                  "Arthur Ave 2BDR sleeps 6! (15 mins from Manhattan)",
                  "Sunny Room across CrotonaPark for Women Only Space",
                  "Uptown Bronx Apartment",
                  "The Sweet, Private Studio in Private Home",
                  "Large Private Room. Safe area. Near 4 and D trains",
                  "Cozy 1 Bedroom Apartment near Yankee Stadium",
                  "Charming Attic RM with BackyardPorchNear Metro"
                ]
              }
            }
          }
        },
        {
          "id": "TRAVEL_SINGLE_STEP_ONE_SHOT_TYPO_Q4",
          "category": "Typos",
          "question": "Can you please help me find somewhere to eat pica? Please return at most 10 entries. Return the answer in JSON format: {'restaurant':[my_restaurant]}",
          "motivation": "Testing the ability of the LLM to understand a typo and correct it approprietely (pizza instead of pica)",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_restaurants_by_cuisine"],
                "parameters": [{ "cuisine": "pizza" }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "restaurant": [
                  "BELLA ROMA PIZZA",
                  "MAKAVELY PIZZA",
                  "BEN'S PIZZA",
                  "BELLEROSE FAMOUS PIZZA",
                  "LINDA PIZZERIA",
                  "J AND D PIZZA",
                  "AVE D PIZZERIA",
                  "DOMINO'S PIZZA #3680",
                  "THWAITES PLACE PELHAM PIZZA",
                  "LONA PIZZA"
                ]
              }
            }
          }
        },
        {
          "id": "TRAVEL_SINGLE_STEP_ONE_SHOT_TYPO_Q5",
          "category": "Typos",
          "question": "Can you please help me find somewhere enjoy some good smoothi? Please return at most 10 entries. Return the answer in JSON format: {'restaurant':[my_restaurant]}",
          "motivation": "Testing the ability of the LLM to understand a typo and correct it approprietely (Smoothie instead of smoothi)",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_restaurants_by_cuisine"],
                "parameters": [{ "cuisine": "Smoothies" }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "restaurant": [
                  "JUICE RIGHT CORP.",
                  "JOE & THE JUICE",
                  "JUICY MAMA",
                  "THE SPOT CAFE",
                  "HEALTH IS LIFE (HERBALIFE)",
                  "JOE & THE JUICE",
                  "HEALTHY LIVING HERBALIFE",
                  "JUICE N' GO",
                  "JUICES FOR LIFE",
                  "KUNG FU TEA"
                ]
              }
            }
          }
        },
        {
          "id": "TRAVEL_SINGLE_STEP_ONE_SHOT_TYPO_Q6",
          "category": "Typos",
          "question": "I want to find a shered place to stay, can you give me some suggestions? Please return at most 10 entries. Return the answer in JSON format: {'airbnb':'my_airbnb'}",
          "motivation": "Testing the ability of the LLM to understand a typo and correct it approprietely (Shared instead of shered)",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_listing_by_room_type"],
                "parameters": [{ "room_type": "Shared room" }]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": [
                "Bedroom 7 bed A., Williamsburg Loft!! Bedford L 1blk!",
                "Calm bed great area.", 
                "Spacious quiet loft close to EVERYTHING! Views!",
                "Shared Cozy Apartment By Times Square Manhattan",
                "Times Square Holiday Rental Loft!",
                "Cozy NYC apartment shared space female only",
                "Beautiful shared room in 20 min to Manhattan",
                "Comfortable sofa bed in chic apt",
                "Central Park - Comfy Futon Couch for 2", 
                "Shared Room 4 FEMALE Guests 30mins to Manhattan-3"
              ]
              }
            }
          }
        }
      ]
    },
    {
      "id": "TRAVEL_Q_SINGLE_STEP_ONE_SHOT_MULTI_PARAM_V01_TYPOS",
      "name": "Mannheim Function Calling Benchmark: Questions w/ Multiple Parameters, Single Step and One Shot",
      "domain": "Travel",
      "date": "2024-01-15",
      "description": "Single step questions designed to test a subset of questions with typos.",
      "authors": ["Deidamea Bajri", "Serxhina Kutrolli","Stiliana Jano"],
      "license": "Apache License 2.0",
      "function_sets": ["TRAVEL_FUNC_MULTI_PARAM_SIMPLE_DESC_NO_EX_V01"],
      "questions": [
        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_TYPO_Q1",
          "category": "Typos",
          "question": "Hello, I'll be in New York for two nights and I'm looking for potential accommodation options around Brooklyn. Could you please provide me with some choices that are priced at no more than $-20 per night? Return the answer in JSON format: {'airbnb':['location']}",
          "motivation": "Testing the ability of the LLM to understand a typo and correct it approprietely (currency value typo)",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_airbnb_by_price_range_neighbourhood"],
                "parameters": [
                  {
                    "min_price": 0,
                    "max_price": 20,
                    "neighbourhood_group": "Brooklyn"
                  }
                ]
              },
              {
                "path_id": 2,
                "functions": ["get_airbnb_by_price_and_neighborhood_group"],
                "parameters": [
                  { "price": 20, "neighbourhood_group": "Brooklyn" }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": ["Calm bed great area.", "Room with a view"]
              }
            },
            "comment": null
          }
        },
          
        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_TYPO_Q2",
          "category": "Typos",
          "question": " Hello, I'll be in New York for two nights and I'm looking for potential accommodation options around Brooklyn. Could you please provide me with some choices that are priced at no more than -tuenti dollars per night? Return the answer in JSON format: {'airbnb':['my_airbnb']",
          "motivation": "Testing the ability of the LLM to understand a typo and correct it approprietely (currency value typo)",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": ["get_airbnb_by_price_and_neighborhood_group"],
                "parameters": [
                  {
                    "price": 20,
                    "neighbourhood_group": "Brooklyn"
                  }
                ]
              },
              {
                "path_id": 2,
                "functions": ["get_airbnb_by_price_range_neighbourhood"],
                "parameters": [
                  {
                    "min_price": 0,
                    "max_price": 20,
                    "neighbourhood_group": "Brooklyn"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": ["Calm bed great area.", "Room with a view"]
              }
            },
            "comment": null
          }
        },       
        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_TYPO_Q3",
          "category": "Typos",
          "question": "Can you get for me some listings that are shareed rooms in Brooklyn and are lastly reviewed in 300 February 2018?  Return the answer in JSON format:{'airbnb_location':'location', 'last_reviewed':'review_date', 'type':'type_of_room'}",
          "motivation": "Testing the ability of the LLM to understand a typo and correct it approprietely (date value typo)",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_airbnb_by_neighbourhood_group_room_type_date"
                ],
                "parameters": [
                  {
                    "room_type": "Shared room",
                    "last_review_date": "28-02-18",
                    "neighbourhood_group": "Brooklyn"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": "There are no available airbnbs in that neighbourhood with that room type and review date"
              }
            },
            "comment": null
          }
        },
        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_TYPO_Q4",
          "category": "Typos",
          "question": " Can you get for me some listings that are shareed rooms in Brooklyn and are lastly reviewed in 310 March 2018? Return the answer in JSON format:{'airbnb':['my_airbnb']}",
          "motivation": "Testing the ability of the LLM to understand a typo and correct it approprietely (date value typo)",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_airbnb_by_neighbourhood_group_room_type_date"
                ],
                "parameters": [
                  {
                    "neighbourhood_group": "Brooklyn",
                    "room_type": "Shared room",
                    "last_review_date": "31-03-18"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "airbnb": ["Clean Cute Williamsburg Apt Steps from train!"]
              }
            },
            "comment": null
          }
        },   
        {
          "id": "TRAVEL_MULTI_STEP_ONE_SHOT_TYPO_Q5",
          "category": "Typos",
          "question": "Hello, I dont know the number of a restaurant that is called Addiction in Staten Island or something like that and I have reserved there and I want to cancel. I just know that they serve Bottled Beverages.Return the answer in JSON format: {'number':'phone_number', 'restaurant_name':'name'} ",
          "motivation": "Testing the ability of the LLM to understand a typo and correct it approprietely (currency value typo)",
          "target": {
            "chained": false,
            "solution_paths": [
              {
                "path_id": 1,
                "functions": [
                  "get_telephone_number_by_name_neighbourhood_group_cuisine"
                ],
                "parameters": [
                  {
                    "restaurant": "ADDICCION",
                    "neighbourhood_group": "Staten Island",
                    "cuisine": "Bottled Beverages"
                  }
                ]
              }
            ],
            "expected_answer": {
              "ordered_items": [],
              "answer": {
                "number": "7183134986",
                "restaurant name": "ADDICCION"
              }
            },
            "comment": null
          }
        }
      ]
    }
  ],
  "function_sets": [
    {
      "id": "TRAVEL_FUNC_ONE_PARAM_SIMPLE_DESC_NO_EX_V01",
      "name": "Functions for Travel Use Case with simple function descriptions and no examples",
      "domain": "Travel",
      "categories": [
        "All Parameters",
        "Without Examples",
        "Simple Description"
      ],
      "num_functions": 14,
      "functions": [
        {
          "name": "get_host_name",
          "description": "Provide the host name for the AirbnB listing",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },
        {
          "name": "get_min_nights",
          "description": "Provide the number of nights required to stay for an airbnb",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },
        {
          "name": "get_nr_of_reviews",
          "description": "Provide the number of reviews for an airbnb",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },  
        {
          "name": "get_listing_price",
          "description": "Provide the price of an airbnb",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },
        {
          "name": "get_listing_by_neighbourhood_group",
          "description": "Get the airbnbs for a specific neighbourhood group",
          "parameters": {
              "type": "object",
              "properties": {
                  "neighbourhood_group": {
                      "type": "string",
                      "description": "The name of the neighbourhood group, e.g. Brooklyn"
                  }
              },
              "required": ["neighbourhood_group"]
          }
        },
        {
          "name": "get_listings_by_review_date",
          "description": "Get the listings for a specific review date in the format DD-MM-YY",
          "parameters": {
              "type": "object",
              "properties": {
                  "last_review_date": {
                      "type": "string",
                      "description": "The date of the last review, e.g. 12-05-19"
                  }
              },
              "required": ["last_review_date"]
          }
        },
        {
          "name": "get_listings_by_min_nights",
          "description": "Get the listings for a specific number of minimum nights to stay at an airbnb",
          "parameters": {
              "type": "object",
              "properties": {
                  "minimum_nights": {
                      "type": "string",
                      "description": "The number of minimum nights, e.g. 3"
                  }
              },
              "required": ["minimum_nights"]
          }
        },  
        {
          "name": "get_frequent_listings",
          "description": "Get the frequent airbnbs",
          "parameters": {
              "type": "object",
              "properties": {
                  "nr_of_listings": {
                      "type": "integer",
                      "description": "The number of listings, e.g. 3"
                  }
              },
              "required": ["nr_of_listings"]
          }
        },    
        {
          "name": "get_listing_by_price",
          "description": "Get the airbnbs for a specific price in US dollars currency",
          "parameters": {
              "type": "object",
              "properties": {
                  "price": {
                      "type": "integer",
                      "description": "The price of an airbnb per night, e.g. 90 dollars"
                  }
              },
              "required": ["price"]
          }
        },
        {
          "name": "get_listing_by_lower_price",
          "description": "Get the airbnbs for a price equal or less to the price requested in US dollars",
          "parameters": {
              "type": "object",
              "properties": {
                  "price": {
                      "type": "integer",
                      "description": "The price of an airbnb per night, e.g. 90 dollars"
                  }
              },
              "required": ["price"]
          }
        },
        {
          "name": "get_neighbourhood_group",
          "description": "Get the neighbourhood group of a specific airbnb",
          "parameters": {
              "type": "object",
              "properties": {
                  "name": {
                      "type": "string",
                      "description": "The name of the airbnb, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["name"]
          }
        },
        {
          "name": "get_restaurants_by_cuisine",
          "description": "For a specific cuisine category, get the respective restaurants",
          "parameters": {
              "type": "object",
              "properties": {
                  "cuisine": {
                      "type": "string",
                      "description": "The cuisine type, e.g. Japanese"
                  }
              },
              "required": ["cuisine"]
          }
        },
        {
          "name": "get_borough_location",
          "description": "For a specific restaurant, get the borough location",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant": {
                      "type": "string",
                      "description": "The restaurant name, e.g. Junoon"
                  }
              },
              "required": ["restaurant"]
          }
        },
        {
          "name": "get_cuisine",
          "description": "For a specific restaurant, get the cuisine",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant": {
                      "type": "string",
                      "description": "The restaurant name, e.g. Junoon"
                  }
              },
              "required": ["restaurant"]
          }
        },
        {
          "name": "get_listing_by_room_type",
          "description": "Get the airbnbs for a specific room type",
          "parameters": {
              "type": "object",
              "properties": {
                  "room_type": {
                      "type": "string",
                      "description": "The room type, e.g. Entire home apt"
                  }
              },
              "required": ["room_type"]
          }
        }          

      ]
    },
    {
      "id": "TRAVEL_FUNC_ONE_PARAM_COMPLEX_DESC_NO_EX_V01",
      "name": "Functions for Travel Use Case with simple function descriptions and no examples",
      "domain": "Travel",
      "categories": [
        "All Parameters",
        "Without Examples",
        "Complex Description"
      ],
      "num_functions": 14,
      "functions": [
        {
          "name": "get_host_name",
          "description": "Provide the name of the Airbnb’s owner.",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },
        {
          "name": "get_min_nights",
          "description": "Provide the minimum duration of stay for the Airbnb reservation.",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },
        {
          "name": "get_nr_of_reviews",
          "description": "Provide the count of guest evaluations for the Airbnb listing.",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },  
        {
          "name": "get_listing_price",
          "description": "Provide the rental cost for the Airbnb accommodation in US dollars.",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing_name": {
                      "type": "string",
                      "description": "The name of the airbnb listing, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["listing_name"]
          }
        },
        {
          "name": "get_listing_by_neighbourhood_group",
          "description": "Get the listings of Airbnb properties within a designated district area.",
          "parameters": {
              "type": "object",
              "properties": {
                  "neighbourhood_group": {
                      "type": "string",
                      "description": "The name of the neighbourhood group, e.g. Brooklyn"
                  }
              },
              "required": ["neighbourhood_group"]
          }
        },
        {
          "name": "get_listings_by_review_date",
          "description": "Get the Airbnb properties associated with a particular date of feedback in the date format DD-MM-YY.",
          "parameters": {
              "type": "object",
              "properties": {
                  "last_review_date": {
                      "type": "string",
                      "description": "The date of the last review, e.g. 12-05-19"
                  }
              },
              "required": ["last_review_date"]
          }
        },
        {
          "name": "get_listings_by_min_nights",
          "description": "Get the Airbnb offerings that require a set minimum number of nights for booking.",
          "parameters": {
              "type": "object",
              "properties": {
                  "minimum_nights": {
                      "type": "string",
                      "description": "The number of minimum nights, e.g. 3"
                  }
              },
              "required": ["minimum_nights"]
          }
        },  
        {
          "name": "get_frequent_listings",
          "description": "Get the Airbnb´s that are most commonly booked.",
          "parameters": {
              "type": "object",
              "properties": {
                  "nr_of_listings": {
                      "type": "integer",
                      "description": "The number of listings, e.g. 3"
                  }
              },
              "required": ["nr_of_listings"]
          }
        },    
        {
          "name": "get_listing_by_price",
          "description": "Locate Airbnb rentals available at a specified price point in US dollars.",
          "parameters": {
              "type": "object",
              "properties": {
                  "price": {
                      "type": "integer",
                      "description": "The price of an airbnb per night, e.g. 90 dollars"
                  }
              },
              "required": ["price"]
          }
        },
        {
          "name": "get_listing_by_lower_price",
          "description": "Get the Airbnb properties priced at or below the specified amount in US dollars.",
          "parameters": {
              "type": "object",
              "properties": {
                  "price": {
                      "type": "integer",
                      "description": "The price of an airbnb per night, e.g. 90 dollars"
                  }
              },
              "required": ["price"]
          }
        },
        {
          "name": "get_neighbourhood_group",
          "description": "Get the local community association for a particular Airbnb listing",
          "parameters": {
              "type": "object",
              "properties": {
                  "name": {
                      "type": "string",
                      "description": "The name of the airbnb, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["name"]
          }
        },
        {
          "name": "get_restaurants_by_cuisine",
          "description": " Get some places that serve a particular type of cuisine",
          "parameters": {
              "type": "object",
              "properties": {
                  "cuisine": {
                      "type": "string",
                      "description": "The cuisine type, e.g. Japanese"
                  }
              },
              "required": ["cuisine"]
          }
        },
        {
          "name": "get_borough_location",
          "description": "Determine the district where a particular restaurant is situated.",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant": {
                      "type": "string",
                      "description": "The restaurant name, e.g. Junoon"
                  }
              },
              "required": ["restaurant"]
          }
        },
        {
          "name": "get_cuisine",
          "description": "Identify the culinary style or category of food that a certain dining establishment specializes in.",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant": {
                      "type": "string",
                      "description": "The restaurant name, e.g. Junoon"
                  }
              },
              "required": ["restaurant"]
          }
        },
        {
          "name": "get_listing_by_room_type",
          "description": "Search for Airbnb properties that match a specific accommodation category or room configuration.",
          "parameters": {
              "type": "object",
              "properties": {
                  "room_type": {
                      "type": "string",
                      "description": "The room type, e.g. Entire home apt"
                  }
              },
              "required": ["room_type"]
          }
        }          

      ]
    },


    {
      "id": "TRAVEL_FUNC_MULTI_PARAM_SIMPLE_DESC_NO_EX_V01",
      "name": "Functions for Travel Use Case with simple function descriptions and no examples",
      "domain": "Travel",
      "categories": [
        "All Parameters",
        "Without Examples",
        "Simple Description"
      ],
      "num_functions": 10,
      "functions": [
        {
          "name": "get_airbnb_by_price_range_neighbourhood",
          "description": "Get the listing by neighbourhood group between a specific price range in US dollars",
          "parameters": {
              "type": "object",
              "properties": {
                  "min_price": {
                      "type": "string",
                      "description": "The min price in the range"
                  },
                  "max_price": {
                      "type": "string",
                      "description": "The maximum price in the range"
                  },                
                  "neighbourhood_group": {
                      "type": "string",
                      "description": "The name of the neighbourhood group, e.g. Brooklyn"
                  }
              },
              "required": ["min_price","max_price","neighbourhood_group"]
          }
        },
        {
            "name": "get_airbnb_by_price_min_nights_and_neighborhood_group",
            "description": "Get the listing by minimum price in US dollars, minimum nights and and a specific neighbourhood group",
            "parameters": {
                "type": "object",
                "properties": {
                    "price": {
                        "type": "integer",
                        "description": "The price of an airbnb per night, e.g. 90 dollars"
                    },
                    "min_nights": {
                        "type": "integer",
                        "description": "The minimum amount of nights, e.g. 2"
                    },                
                    "neighbourhood_group": {
                        "type": "string",
                        "description": "The name of the neighbourhood group, e.g. Brooklyn"
                    }
                },
                "required": ["price","min_nights","neighbourhood_group"]
            }
        }, 
        {
            "name": "get_airbnb_by_neighbourhood_group_room_type_date",
            "description": "Get the listing by neighbourhood group, room type and last review date in the format DD-YY-MM",
            "parameters": {
                "type": "object",
                "properties": {
                    "room_type": {
                        "type": "string",
                        "description": "The type of room of an airbnb, e.g. private room"
                    },
                    "last_review_date": {
                        "type": "string",
                        "description": "The date when the last review was recorded, e.g. 23-09-2019"
                    },                
                    "neighbourhood_group": {
                        "type": "string",
                        "description": "The name of the neighbourhood group, e.g. Brooklyn"
                    }
                },
                "required": ["room_type","last_review_date","neighbourhood_group"]
            }
        },
        {
            "name": "get_airbnb_by_price_range_neighbourhood",
            "description": "Get the listing by neighbourhood group between a specific price range in US dollars",
            "parameters": {
                "type": "object",
                "properties": {
                    "min_price": {
                        "type": "string",
                        "description": "The min price in the range"
                    },
                    "max_price": {
                        "type": "string",
                        "description": "The maximum price in the range"
                    },                
                    "neighbourhood_group": {
                        "type": "string",
                        "description": "The name of the neighbourhood group, e.g. Brooklyn"
                    }
                },
                "required": ["min_price","max_price","neighbourhood_group"]
            }
        }, 
        {
            "name": "get_x_most_popular_places_in_neighbourhood_group_room_type",
            "description": "Get the x most popular airbnbs in a neighbourhood group and for a specific room type ",
            "parameters": {
                "type": "object",
                "properties": {
                    "popularity": {
                        "type": "integer",
                        "description": "The number of airbnbs to output"
                    },
                    "neighbourhood_group": {
                        "type": "string",
                        "description": "The name of the neighbourhood group, e.g. Brooklyn"
                    },                
                    "room_type": {
                        "type": "string",
                        "description": "The type of the room, e.g. Shared Room"
                    }
                },
                "required": ["popularity","neighbourhood_group","room_type"]
            }
        },
           
        {
            "name": "get_avg_by_neighbourgood_group_and_room_type",
            "description": "Get the average price in US dollars of a neighbourhood group by room type ",
            "parameters": {
                "type": "object",
                "properties": {
                    "neighbourhood_group": {
                        "type": "string",
                        "description": "The name of the neighbourhood group, e.g. Brooklyn"
                    },                
                    "room_type": {
                        "type": "string",
                        "description": "The type of the room, e.g. Shared Room"
                    }
                },
                "required": ["neighbourhood_group","room_type"]
            }
        },

        {
            "name": "get_min_cost_by_neighbourhood_group_room_type_min_nights",
            "description": "Get the least costly in US dollars airbnbs for a specific neighbourhood group,room type and minimum nights",
            "parameters": {
                "type": "object",
                "properties": {
                    "nr_requests": {
                        "type": "integer",
                        "description": "The number of airbnbs to output"
                    },
                    "neighbourhood_group": {
                        "type": "string",
                        "description": "The name of the neighbourhood group, e.g. Brooklyn"
                    },                
                    "room_type": {
                        "type": "string",
                        "description": "The type of the room, e.g. Shared Room"
                    },
                    "min_nights": {
                        "type": "string",
                        "description": "The minimum number of nights to stay"
                    }            
                },
                "required": ["nr_requests","neighbourhood_group","room_type","min_nights"]
            }
        },   

        {
            "name": "get_telephone_number_by_name_neighbourhood_group_cuisine",
            "description": "Get the telephone number of a restaurant given the neighbourhood group or cuisine",
            "parameters": {
                "type": "object",
                "properties": {
                    "restaurant": {
                        "type": "string",
                        "description": "The name of the restaurant"
                    },
                    "neighbourhood_group": {
                        "type": "string",
                        "description": "The name of the borough"
                    }, 
                    "cuisine": {
                        "type": "string",
                        "description": "The cuisine of the restaurant e.g. Japanese"
                    }
                },
                "required": ["restaurant","neighbourhood_group","cuisine"]
            }
        },

        {
            "name": "get_restaurant_by_zipcode_cuisine_borough_phone",
            "description": "Get the restaurant info by zip code, cuisine, borough and phone number",
            "parameters": {
                "type": "object",
                "properties": {
                    "zip_code": {
                        "type": "integer",
                        "description": "The zip code of the restaurant"
                    },
                    "cuisine": {
                        "type": "string",
                        "description": "The cuisine of the restaurant e.g. Japanese"
                    }, 
                    "borough": {
                        "type": "string",
                        "description": "The borough of the restaurant e.g. Bronx"
                    }, 
                    "phone": {
                        "type": "string",
                        "description": "The phone number of the restaurant"
                    }          
                },
                "required": ["zip_code","cuisine","borough","phone"]
            }
        }, 

        {
            "name": "get_info_by_name_cuisine_borough_phone",
            "description": "Get the information of a restaurant (street, building and zip code)" ,
            "parameters": {
                "type": "object",
                "properties": {
                    "restaurant": {
                        "type": "string",
                        "description": "The name of the restaurant"
                    },
                    "cuisine": {
                        "type": "string",
                        "description": "The cuisine of the restaurant e.g. Japanese"
                    }, 
                    "borough": {
                        "type": "string",
                        "description": "The borough of the restaurant e.g. Bronx"
                    }, 
                    "phone": {
                        "type": "string",
                        "description": "The phone number of the restaurant"
                    }                
                },
                "required": ["restaurant","cuisine","borough","phone"]
            }
        }   
      
      ]
    },

    {
      "id": "TRAVEL_FUNC_MULTI_CALL_SEQUENTIAL_SIMPLE_DESC_NO_EX_V01",
      "name": "Functions for Travel Use Case with simple function descriptions, multiple calls and no examples",
      "domain": "Travel",
      "categories": [
        "All Parameters",
        "Multi-call",
        "Without Examples",
        "Simple Description"
      ],
      "num_functions": 11,
      "functions": [
        {
          "name": "get_airbnb_by_price_min_nights_and_neighborhood_group",
          "description": "Get the listing by minimum price in US dollars, minimum nights and and a specific neighbourhood group",
          "parameters": {
              "type": "object",
              "properties": {
                  "price": {
                      "type": "integer",
                      "description": "The price of an airbnb per night, e.g. 90 dollars"
                  },
                  "min_nights": {
                      "type": "integer",
                      "description": "The minimum amount of nights, e.g. 2"
                  },                
                  "neighbourhood_group": {
                      "type": "string",
                      "description": "The name of the neighbourhood group, e.g. Brooklyn"
                  }
              },
              "required": ["price","min_nights","neighbourhood_group"]
          }
        },   
        {
          "name": "get_long_lat_by_name_street",
          "description": "Get the latitude and longitude of a restaurant by street",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant": {
                      "type": "string",
                      "description": "The name of the restaurant"
                  },
                  "street": {
                      "type": "string",
                      "description": "The street where the restaurant is located"
                  }             
              },
              "required": ["restaurant", "street"]
          }
        },
        {
          "name": "get_airbnb_by_lat_long",
          "description": "Get the airbnb by latitude and longitude",
          "parameters": {
              "type": "object",
              "properties": {
                  "latitude": {
                      "type": "string",
                      "description": "The latitude of the airbnb"
                  },
                  "longitude": {
                      "type": "string",
                      "description": "The longitude of the airbnb"
                  }               
              },
              "required": ["latitude", "longitude"]
          }
        },   
        {
          "name": "get_long_lat_by_airbnb",
          "description": "Get the airbnb by latitude and longitude",
          "parameters": {
              "type": "object",
              "properties": {
                  "listing": {
                      "type": "string",
                      "description": "The airbnb's name"
                  }             
              },
              "required": ["listing"]
          }
        },
        {
          "name": "get_airbnb_address_by_lat_long",
          "description": "Get the airbnb address from longitude and latitude",
          "parameters": {
              "type": "object",
              "properties": {
                  "latitude": {
                      "type": "string",
                      "description": "The restaurant's latitude"
                  },  
                  "longitude": {
                      "type": "string",
                      "description": "The restaurant's longitude"
                  }               
              },
              "required": ["latitude","longitude"]
          }
       },
       {
          "name": "get_restaurant_by_airbnb_closeness",
          "description": "Get the restaurant close to an airbnb",
          "parameters": {
              "type": "object",
              "properties": {
                  "latitude": {
                      "type": "string",
                      "description": "The airbnb's latitude"
                  },  
                  "longitude": {
                      "type": "string",
                      "description": "The airbnb's longitude"
                  }                
              },
              "required": ["latitude","longitude"]
          }
        },
        {
          "name": "get_info_restaurant_with_zipcode_street_building",
          "description": "Get the restaurant info (zipcode,street and building)",
          "parameters": {
              "type": "object",
              "properties": {
                  "latitude": {
                      "type": "string",
                      "description": "The airbnb's latitude"
                  },  
                  "longitude": {
                      "type": "string",
                      "description": "The airbnb's longitude"
                  }                 
              },
              "required": ["latitude","longitude"]
          }
        },
        {
          "name": "get_restaurants_by_ratings",
          "description": "Get the restaurants according to a specific rating",
          "parameters": {
              "type": "object",
              "properties": {
                  "rating": {
                      "type": "string",
                      "description": "The rating of the restaurant"
                  }                 
              },
              "required": ["rating"]
          }
        },
        {
          "name": "get_neighborhood_by_rest_specification",
          "description": "Get the restaurants according to a specific neighborhood",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurants": {
                      "type": "string",
                      "description": "The list of restaurant name"
                  },  
                  "neigborhood": {
                      "type": "string",
                      "description": "The neighborhood of a restaurant"
                  }              
              },
              "required": ["restaurants","neigborhood"]
          }
        },
        {
          "name": "get_airbnb_with_max_reviews",
          "description": "Get the airbnbs with max number of reviews at a specific neighborhood group and room type",
          "parameters": {
              "type": "object",
              "properties": {
                  "popularity": {
                      "type": "int",
                      "description": "The number of airbnbs to show"
                  },  
                  "neighbourhood_group": {
                      "type": "string",
                      "description": "The neighborhood of an airbnb"
                  }, 
                  "room_type": {
                      "type": "string",
                      "description": "The type of room of an airbnb"
                  }              
              },
              "required": ["popularity","neigborhood_group","room_type"]
          }
        },
        {
          "name": "get_restaurant_long_lat_by_zipcode_cuisine_borough_phone",
          "description": "Get the restaurant info and latitude and longitude by zip code, cuisine, borough and phone number",
          "parameters": {
              "type": "object",
              "properties": {
                  "zip_code": {
                      "type": "number",
                      "description": "The zip code of the restaurant"
                  },
                  "cuisine": {
                      "type": "string",
                      "description": "The cuisine of the restaurant e.g. Japanese"
                  }, 
                  "borough": {
                      "type": "string",
                      "description": "The borough of the restaurant e.g. Bronx"
                  }, 
                  "phone": {
                      "type": "string",
                      "description": "The phone number of the restaurant"
                  }                
              },
              "required": ["zip_code","cuisine","borough","phone"]
          }
        }      
      ]
    },
    {
      "id": "TRAVEL_FUNC_MULTI_CALL_PARALLEL_SIMPLE_DESC_NO_EX_V01",
      "name": "Functions for Travel Use Case with simple function descriptions, multiple calls and no examples",
      "domain": "Travel",
      "categories": [
        "All Parameters",
        "Multi-call",
        "Without Examples",
        "Simple Description"
      ],
      "num_functions": 7,
      "functions": [ 
        {
          "name": "get_avg_prep_time_by_restaurant_name",
          "description": "Get average prep time of a restaurant",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant_name": {
                      "type": "string",
                      "description": "The restaurant name"
                  }
              },
              "required": ["restaurant_name"]
          }
        },
        {
          "name": "get_avg_costs_by_restaurant_name",
          "description": "Get average costs of a restaurant in US dollars",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant_name": {
                      "type": "string",
                      "description": "The restaurant name"
                  }
              },
              "required": ["restaurant_name"]
          }
       },
       {
          "name": "get_rating_by_restaurant_name",
          "description": "Get rating by restaurant name",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant_name": {
                      "type": "string",
                      "description": "The restaurant name"
                  }
              },
              "required": ["restaurant_name"]
          }
        },
        {
          "name": "get_avg_delivery_time_by_restaurant_name",
          "description": "Get average delivery time of a restaurant",
          "parameters": {
              "type": "object",
              "properties": {
                  "restaurant_name": {
                      "type": "string",
                      "description": "The restaurant name"
                  }
              },
              "required": ["restaurant_name"]
          }
        },
        {
          "name": "get_restaurant_by_cuisine_borough",
          "description": "Get restaurant by borough and cuisine",
          "parameters": {
              "type": "object",
              "properties": {
                  "borough": {
                      "type": "string",
                      "description": "The borough, e.g. Manhattan"
                  },
                  "cuisine": {
                      "type": "string",
                      "description": "The cuisine type of the restaurant, e.g Italian"
                  }
              },
              "required": ["borough", "cuisine"]
          }
       },
       {
          "name": "get_neighbourhood_group",
          "description": "Get the neighbourhood group of a specific airbnb",
          "parameters": {
              "type": "object",
              "properties": {
                  "name": {
                      "type": "string",
                      "description": "The name of the airbnb, e.g. Brooklyn Home in the Heart of it All"
                  }
              },
              "required": ["name"]
          }
       },
       {
          "name": "get_ratings_per_cuisines",
          "description": "Get restaurant by borough and cuisine",
          "parameters": {
              "type": "object",
              "properties": {
                  "cuisines": {
                      "type": "string",
                      "description": "The cuisine type, e.g Italian"
                  }
              },
              "required": ["cuisines"]
          }
       }             
      
      ]
    },

    {
      "id": "MUSIC_FUNC_ONE_PARAM_SIMPLE_DESC_NO_EX_V01",
      "name": "Music - 1 parameter functions with simple function description, no examples.",
      "domain": "Music",
      "categories": ["1 Parameter", "Without Examples", "Simple Description"],
      "num_functions": 10,
      "functions": [
        {
          "name": "albums_by_artist_1",
          "description": "Returns all albums by a given artist.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist."
              }
            },
            "required": ["artist_name"]
          }
        },
        {
          "name": "top_rated_albums",
          "description": "Returns the top-rated albums based on average rating.",
          "parameters": {
            "type": "object",
            "properties": {
              "n": {
                "type": "number",
                "description": "The number of albums to return. Default is 10."
              }
            },
            "required": []
          }
        },
        {
          "name": "artist_by_album",
          "description": "Returns the artist of an album by its name.",
          "parameters": {
            "type": "object",
            "properties": {
              "album_name": {
                "type": "string",
                "description": "The name of the album."
              }
            },
            "required": ["album_name"]
          }
        },
        {
          "name": "albums_by_genres",
          "description": "Retrieves a list of albums that contain any of the specified genres.",
          "parameters": {
            "type": "object",
            "properties": {
              "genres": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of genre strings the albums must contain."
              }
            },
            "required": ["genres"]
          }
        },
        {
          "name": "albums_by_release_date_1",
          "description": "Retrieves all albums released on a specific date.",
          "parameters": {
            "type": "object",
            "properties": {
              "release_date": {
                "type": "string",
                "description": "The release date to filter albums by. Can be in YYYY (year), YYYY-MM (year-month), or YYYY-MM-DD (specific date) format."
              }
            },
            "required": ["release_date"]
          }
        },
        {
          "name": "top_streamed_songs",
          "description": "Returns the n most streamed songs.",
          "parameters": {
            "type": "object",
            "properties": {
              "n": {
                "type": "number",
                "description": "The number of top-streamed songs to return. Default is 10."
              }
            },
            "required": []
          }
        },
        {
          "name": "songs_by_release_date",
          "description": "Retrieves all songs released on a specific date, in a specific month, or in a specific year, based on the provided release date.",
          "parameters": {
            "type": "object",
            "properties": {
              "release_date": {
                "type": "string",
                "description": "The release date to filter songs by. Can be in YYYY (year), YYYY-MM (year-month), or YYYY-MM-DD (specific date) format."
              }
            },
            "required": ["release_date"]
          }
        },
        {
          "name": "songs_by_longest_duration",
          "description": "Returns the top 'n' songs sorted by their duration, from longest to shortest.",
          "parameters": {
            "type": "object",
            "properties": {
              "n": {
                "type": "number",
                "description": "The number of top songs to return, based on duration. Defaults to 10 if not specified."
              }
            },
            "required": []
          }
        },
        {
          "name": "artist_by_song",
          "description": "Returns the artist of the song.",
          "parameters": {
            "type": "object",
            "properties": {
              "song_name": {
                "type": "string",
                "description": "The name of the song."
              }
            },
            "required": ["song_name"]
          }
        },
        {
          "name": "songs_by_artist_1",
          "description": "Returns all songs by a given artist.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist."
              }
            },
            "required": ["artist_name"]
          }
        }
      ]
    },
    {
      "id": "MUSIC_FUNC_MULTI_PARAM_SIMPLE_DESC_NO_EX_V01",
      "name": "Music - Multi(>1) parameter functions with simple function description, no examples.",
      "domain": "Music",
      "categories": [
        "Multi Parameters",
        "Without Examples",
        "Simple Description"
      ],
      "num_functions": 16,
      "functions": [
        {
          "name": "filter_albums_by_date_range",
          "description": "Filters and retrieves albums released within a specified date range. The range is inclusive of the start and end dates.",
          "parameters": {
            "type": "object",
            "properties": {
              "start_date": {
                "type": "string",
                "description": "The start date of the date range for filtering albums. Can be in YYYY, YYYY-MM, or YYYY-MM-DD format."
              },
              "end_date": {
                "type": "string",
                "description": "The end date of the date range for filtering albums. Can be in YYYY, YYYY-MM, or YYYY-MM-DD format."
              }
            },
            "required": ["start_date", "end_date"]
          }
        },
        {
          "name": "albums_by_genres2",
          "description": "Retrieves albums that match specified inclusion and exclusion genre criteria.",
          "parameters": {
            "type": "object",
            "properties": {
              "genres_in": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of genre strings the albums must contain."
              },
              "genres_out": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of genre strings the albums must not contain."
              }
            },
            "required": ["genres_in", "genres_out"]
          }
        },
        {
          "name": "albums_by_date_and_genres",
          "description": "Retrieves albums released on a specific date, in a specific month, or in a specific year that match any of the specified genres.",
          "parameters": {
            "type": "object",
            "properties": {
              "release_date": {
                "type": "string",
                "description": "The release date of the albums. Can be in YYYY, YYYY-MM, or YYYY-MM-DD format."
              },
              "genres": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of genre strings to filter albums by."
              }
            },
            "required": ["release_date", "genres"]
          }
        },
        {
          "name": "high_rated_albums",
          "description": "Retrieves albums with an average rating above a specified threshold and a minimum number of ratings.",
          "parameters": {
            "type": "object",
            "properties": {
              "rating_threshold": {
                "type": "number",
                "description": "The minimum average rating for the albums. Defaults to 4.0 if not specified."
              },
              "min_ratings": {
                "type": "number",
                "description": "The minimum number of ratings an album must have. Defaults to 100 if not specified."
              }
            },
            "required": []
          }
        },
        {
          "name": "top_streamed_songs_by_artist",
          "description": "Retrieves the top streamed songs by specific artist, sorted by number of streams.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist."
              },
              "n": {
                "type": "number",
                "description": "The number of top-streamed songs to return. Defaults to 5 if not specified."
              }
            },
            "required": ["artist_name"]
          }
        },
        {
          "name": "songs_by_danceability_explicitness",
          "description": "Retrieves songs that meet a specified danceability threshold and explicitness criteria.",
          "parameters": {
            "type": "object",
            "properties": {
              "danceability_threshold": {
                "type": "number",
                "description": "The minimum danceability rating (percentage) to filter songs by."
              },
              "explicit": {
                "type": "boolean",
                "description": "Flag to filter songs by explicit content. Defaults to True if not specified."
              }
            },
            "required": ["danceability_threshold"]
          }
        },
        {
          "name": "albums_by_year_genres_and_descriptors",
          "description": "Retrieves albums released on a specific date, month, or year, that fit within specified genres and match given descriptors.",
          "parameters": {
            "type": "object",
            "properties": {
              "release_date": {
                "type": "string",
                "description": "Release date to filter albums by, in YYYY, YYYY-MM, or YYYY-MM-DD format."
              },
              "genres": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of genres to filter albums by."
              },
              "descriptors": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of descriptors to match albums with."
              }
            },
            "required": ["release_date", "genres", "descriptors"]
          }
        },
        {
          "name": "high_rated_reviewed_albums",
          "description": "Retrieves albums that meet specific criteria of high average ratings, a minimum number of ratings, and a minimum number of reviews.",
          "parameters": {
            "type": "object",
            "properties": {
              "rating_threshold": {
                "type": "number",
                "description": "The minimum average rating for the albums."
              },
              "min_ratings": {
                "type": "number",
                "description": "The minimum number of ratings an album must have."
              },
              "review_threshold": {
                "type": "number",
                "description": "The minimum number of reviews an album must have."
              }
            },
            "required": ["rating_threshold", "min_ratings", "review_threshold"]
          }
        },
        {
          "name": "songs_by_danceability_explicitness_speechiness",
          "description": "Retrieves songs based on specified thresholds for danceability, speechiness, and explicit content criteria.",
          "parameters": {
            "type": "object",
            "properties": {
              "danceability_threshold": {
                "type": "number",
                "description": "The minimum danceability rating (percentage) to filter songs by."
              },
              "speechiness_threshold": {
                "type": "number",
                "description": "The minimum speechiness rating (percentage) to filter songs by."
              },
              "explicit": {
                "type": "boolean",
                "description": "Flag to filter songs by explicit content. Defaults to True if not specified."
              }
            },
            "required": ["danceability_threshold", "speechiness_threshold"]
          }
        },
        {
          "name": "top_streamed_songs_by_artist_date",
          "description": "Retrieves the top streamed songs by a specific artist, released on a given date, month, or year.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist whose songs are to be retrieved."
              },
              "release_date": {
                "type": "string",
                "description": "The release date of the songs to filter by, in YYYY, YYYY-MM, or YYYY-MM-DD format."
              },
              "n": {
                "type": "number",
                "description": "The number of top-streamed songs to return. Defaults to 5 if not specified."
              }
            },
            "required": ["artist_name", "release_date"]
          }
        },
        {
          "name": "unique_albums",
          "description": "Finds albums that are distinctive in terms of genre diversity and artist collaboration but have lower average ratings.",
          "parameters": {
            "type": "object",
            "properties": {
              "genres_threshold": {
                "type": "number",
                "description": "The minimum number of genres an album must cover."
              },
              "artist_count_threshold": {
                "type": "number",
                "description": "The minimum number of artists required to be involved in an album."
              },
              "max_rating_threshold": {
                "type": "number",
                "description": "The maximum average rating that an album can have."
              }
            },
            "required": [
              "genres_threshold",
              "artist_count_threshold",
              "max_rating_threshold"
            ]
          }
        },
        {
          "name": "albums_by_dates_genres_rating",
          "description": "Retrieves albums released within a specific date range, filtered by genres to include and exclude, and having an average rating above a specified minimum threshold.",
          "parameters": {
            "type": "object",
            "properties": {
              "start_date": {
                "type": "string",
                "description": "The start date of the date range for filtering albums, in YYYY-MM-DD format."
              },
              "end_date": {
                "type": "string",
                "description": "The end date of the date range for filtering albums, in YYYY-MM-DD format."
              },
              "genre_in": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of genres that the albums must include."
              },
              "genre_out": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of genres that the albums must not include."
              },
              "min_rating": {
                "type": "number",
                "description": "The minimum average rating threshold for the albums."
              }
            },
            "required": [
              "start_date",
              "end_date",
              "genre_in",
              "genre_out",
              "min_rating"
            ]
          }
        },
        {
          "name": "high_rated_reviewed_albums_by_date",
          "description": "Retrieves albums that exceed a certain rating threshold, have a minimum number of ratings and reviews, and are released on a specified date.",
          "parameters": {
            "type": "object",
            "properties": {
              "rating_threshold": {
                "type": "number",
                "description": "The minimum average rating for the albums."
              },
              "min_ratings": {
                "type": "number",
                "description": "The minimum number of ratings an album must have."
              },
              "review_threshold": {
                "type": "number",
                "description": "The minimum number of reviews an album must have."
              },
              "release_date": {
                "type": "string",
                "description": "The release date of the albums, in YYYY, YYYY-MM, or YYYY-MM-DD format."
              }
            },
            "required": [
              "rating_threshold",
              "min_ratings",
              "review_threshold",
              "release_date"
            ]
          }
        },
        {
          "name": "top_streamed_songs_by_artist_date_range",
          "description": "Finds the top streamed songs by a specific artist within a given date range, and returns a specified number of these top songs.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist whose songs are to be retrieved."
              },
              "start_date": {
                "type": "string",
                "description": "The start date of the date range for filtering songs, in YYYY-MM-DD format."
              },
              "end_date": {
                "type": "string",
                "description": "The end date of the date range for filtering songs, in YYYY-MM-DD format."
              },
              "n": {
                "type": "number",
                "description": "The number of top-streamed songs to return. Defaults to 5 if not specified."
              }
            },
            "required": ["artist_name", "start_date", "end_date", "n"]
          }
        },
        {
          "name": "speechiness_songs",
          "description": "Finds songs based on specific criteria of speechiness, energy, explicit content, and BPM, allowing a tolerance range for speechiness and energy values.",
          "parameters": {
            "type": "object",
            "properties": {
              "speechiness": {
                "type": "number",
                "description": "Target threshold for speechiness with an acceptable deviation defined by the threshold."
              },
              "energy": {
                "type": "number",
                "description": "Target threshold for energy with an acceptable deviation defined by the threshold."
              },
              "explicit": {
                "type": "boolean",
                "description": "Flag indicating whether to filter for explicit content."
              },
              "bpm": {
                "type": "number",
                "description": "Target Beats Per Minute (BPM) to filter songs by."
              },
              "threshold": {
                "type": "number",
                "description": "Range value to determine the acceptable deviation from the speechiness and energy thresholds. Defaults to 20 if not specified."
              }
            },
            "required": [
              "speechiness",
              "energy",
              "explicit",
              "bpm",
              "threshold"
            ]
          }
        },
        {
          "name": "instrumental_songs",
          "description": "Identifies songs based on specified levels of instrumentalness, valence, danceability, and BPM, with a tolerance range for each parameter.",
          "parameters": {
            "type": "object",
            "properties": {
              "instrumentalness": {
                "type": "number",
                "description": "Target threshold for instrumentalness, with a specified deviation range."
              },
              "valence": {
                "type": "number",
                "description": "Target threshold for valence, with a specified deviation range."
              },
              "danceability": {
                "type": "number",
                "description": "Target threshold for danceability, with a specified deviation range."
              },
              "bpm": {
                "type": "number",
                "description": "Target Beats Per Minute (BPM) to filter songs by."
              },
              "threshold": {
                "type": "number",
                "description": "Range value to determine the acceptable deviation from the instrumentalness, valence, and danceability thresholds."
              }
            },
            "required": [
              "instrumentalness",
              "valence",
              "danceability",
              "bpm",
              "threshold"
            ]
          }
        }
      ]
    },
    {
      "id": "MUSIC_FUNC_ONE_PARAM_COMPLEX_DESC_NO_EX_V01",
      "name": "Music - 1 parameter functions with complex function description, no examples.",
      "domain": "Music",
      "categories": ["1 Parameter", "Without Examples", "Complex Description"],
      "num_functions": 10,
      "functions": [
        {
          "name": "albums_by_artist_1",
          "description": "Fetches the collection of music releases associated with a specific performer.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist."
              }
            },
            "required": ["artist_name"]
          }
        },
        {
          "name": "top_rated_albums",
          "description": "Retrieves the records of most favoured music releases ranked by their scores.",
          "parameters": {
            "type": "object",
            "properties": {
              "n": {
                "type": "number",
                "description": "The number of albums to return. Default is 10."
              }
            },
            "required": []
          }
        },
        {
          "name": "artist_by_album",
          "description": "Fetches the singer who released a stated collection.",
          "parameters": {
            "type": "object",
            "properties": {
              "album_name": {
                "type": "string",
                "description": "The name of the album."
              }
            },
            "required": ["album_name"]
          }
        },
        {
          "name": "albums_by_genres",
          "description": "Retrieves a list of records that can be classified to be of the specified category/type.",
          "parameters": {
            "type": "object",
            "properties": {
              "genres": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of genre strings the albums must contain."
              }
            },
            "required": ["genres"]
          }
        },
        {
          "name": "albums_by_release_date_1",
          "description": "Retrieves all collections launched during a particular timeframe.",
          "parameters": {
            "type": "object",
            "properties": {
              "release_date": {
                "type": "string",
                "description": "The release date to filter albums by. Can be in YYYY (year), YYYY-MM (year-month), or YYYY-MM-DD (specific date) format."
              }
            },
            "required": ["release_date"]
          }
        },
        {
          "name": "top_streamed_songs",
          "description": "Retrieves the trendy tracks which the vast majority has been influenced by",
          "parameters": {
            "type": "object",
            "properties": {
              "n": {
                "type": "number",
                "description": "The number of top-streamed songs to return. Default is 10."
              }
            },
            "required": []
          }
        },
        {
          "name": "songs_by_release_date",
          "description": "Retrieves all musical pieces launched during a particular timeframe.",
          "parameters": {
            "type": "object",
            "properties": {
              "release_date": {
                "type": "string",
                "description": "The release date to filter songs by. Can be in YYYY (year), YYYY-MM (year-month), or YYYY-MM-DD (specific date) format."
              }
            },
            "required": ["release_date"]
          }
        },
        {
          "name": "songs_by_longest_duration",
          "description": "Retrieves the n highest-ranking tunes arranged by their length.",
          "parameters": {
            "type": "object",
            "properties": {
              "n": {
                "type": "number",
                "description": "The number of top songs to return, based on duration. Defaults to 10 if not specified."
              }
            },
            "required": []
          }
        },
        {
          "name": "artist_by_song",
          "description": "Fetches the performer who released a stated track.",
          "parameters": {
            "type": "object",
            "properties": {
              "song_name": {
                "type": "string",
                "description": "The name of the song."
              }
            },
            "required": ["song_name"]
          }
        },
        {
          "name": "songs_by_artist_1",
          "description": "Retrieves the music recordings that have been released by the specified singer.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist."
              }
            },
            "required": ["artist_name"]
          }
        }
      ]
    },
    {
      "id": "MUSIC_FUNC_COMPLEX_DESC_NO_EX_V2",
      "name": "Music - one and multi parameter functions with elaborative function description, no examples.",
      "domain": "Music",
      "categories": [
        "1 Parameter",
        "Multiple Parameter",
        "Without Examples",
        "Complex Description"
      ],
      "num_functions": 11,
      "functions": [
        {
          "name": "artist_info",
          "description": "Retrieves detailed information for a specified artist, including attributes like name, band status, formation/birth date, city, country, genres, and related artists.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The name of the artist. Matches against the 'Name' column in the ARTIST_SQL dataset."
              }
            },
            "required": ["artist_name"]
          }
        },
        {
          "name": "album_info",
          "description": "Fetches detailed information about a specific album, covering attributes such as album name, artist name, release date, genres, descriptors, average rating, rating count, and review count.",
          "parameters": {
            "type": "object",
            "properties": {
              "album_name": {
                "type": "string",
                "description": "The name of the album. Matches against the 'release_name' column in the ALBUMS_SQL dataset."
              }
            },
            "required": ["album_name"]
          }
        },
        {
          "name": "song_info",
          "description": "Provides detailed information on a specific song, including track name, artist(s) name, album name, artist count, release date, streams, BPM, key, mode, danceability, valence, energy, acousticness, instrumentalness, liveness, speechiness, and duration in minutes.",
          "parameters": {
            "type": "object",
            "properties": {
              "song_name": {
                "type": "string",
                "description": "The name of the song. Matches against the 'track_name' column in the SONGS_SQL dataset."
              }
            },
            "required": ["song_name"]
          }
        },
        {
          "name": "albums_by_artist_2",
          "description": "Retrieves all albums by a specific artist, searching through the 'artist_name' column in the ALBUMS_SQL dataset. It includes album name, artist name, release date, genres, descriptors, average rating, rating count, and review count.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The artist's name to search albums for. The search is performed within the 'artist_name' column, supporting partial matches."
              }
            },
            "required": ["artist_name"]
          }
        },
        {
          "name": "artists_by_genres",
          "description": "Finds artists that match any of the specified genres, utilizing the 'genres' column in the ARTIST_SQL dataset. It covers artist's name, is_band status, formation/birth date, city, country, genres, and related artists.",
          "parameters": {
            "type": "object",
            "properties": {
              "genres": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of genre strings to filter artists by. The filtering checks the 'genres' column for any matches."
              }
            },
            "required": ["genres"]
          }
        },
        {
          "name": "songs_by_album",
          "description": "Retrieves all songs from a specific album, including details such as track name, artist(s) name, album name, artist count, release date, streams, and various musical and acoustic properties like BPM, danceability, and duration in minutes.",
          "parameters": {
            "type": "object",
            "properties": {
              "album_name": {
                "type": "string",
                "description": "The name of the album to find songs for. Matches against the 'album_name' column in the SONGS_SQL dataset."
              }
            },
            "required": ["album_name"]
          }
        },
        {
          "name": "max_rating_given_albums",
          "description": "Finds the highest average rating from a list of specified albums. Returns the maximum average rating and the names of albums that share this rating. Relies on 'release_name' for album identification and 'avg_rating' for evaluation.",
          "parameters": {
            "type": "object",
            "properties": {
              "albums": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of album names to evaluate. The function searches the 'release_name' column in the ALBUMS_SQL dataset."
              }
            },
            "required": ["albums"]
          }
        },
        {
          "name": "sum_streams_given_songs",
          "description": "Calculates the total number of streams for a specified list of songs. Accepts either a list of song names or a single comma-separated string of song names. Utilizes the 'track_name' for song identification and 'streams' for summing.",
          "parameters": {
            "type": "object",
            "properties": {
              "songs": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of song names, or a single string of comma-separated song names, to calculate total streams for. Matches against the 'track_name' column in the SONGS_SQL dataset."
              }
            },
            "required": ["songs"]
          }
        },
        {
          "name": "highest_rated_albums",
          "description": "Retrieves albums that have an average rating above a specified threshold and a minimum number of ratings. Filters based on 'avg_rating' and 'rating_count' columns, providing detailed album information.",
          "parameters": {
            "type": "object",
            "properties": {
              "rating_threshold": {
                "type": "number",
                "default": 4.0,
                "description": "The minimum average rating albums must meet to be included. Searches the 'avg_rating' column in the ALBUMS_SQL dataset."
              },
              "min_ratings": {
                "type": "number",
                "default": 100,
                "description": "The minimum number of ratings an album must have to be considered. Filters using the 'rating_count' column."
              }
            },
            "required": []
          }
        },
        {
          "name": "albums_by_release_date_2",
          "description": "Retrieves all albums released on a specific date, in a specific month, or in a specific year, based on the provided release date, searching through the 'release_date' column in the ALBUMS_SQL dataset. It includes album name, artist name, release date, genres, descriptors, average rating, rating count, and review count.",
          "parameters": {
            "type": "object",
            "properties": {
              "release_date": {
                "type": "string",
                "description": "The release date to filter albums by. Can be in YYYY (year), YYYY-MM (year-month), or YYYY-MM-DD (specific date) format."
              }
            },
            "required": ["release_date"]
          }
        },
        {
          "name": "songs_by_artist_2",
          "description": "Retrieves all songs by a specific artist, searching through the 'artist(s)_name' column in the SONGS_SQL dataset,  including details such as track name, artist(s) name, album name, artist count, release date, streams, and various musical and acoustic properties like BPM, danceability, and duration in minutes.",
          "parameters": {
            "type": "object",
            "properties": {
              "artist_name": {
                "type": "string",
                "description": "The artist's name to search songs for. The search is performed within the 'artist(s)_name' column, supporting partial matches."
              }
            },
            "required": ["artist_name"]
          }
        }
      ]
    }
  ]
}
